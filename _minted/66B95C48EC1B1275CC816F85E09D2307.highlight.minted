\begin{MintedVerbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/** \PYGZlt{}module\PYGZgt{} Student Division Strategy: Inverse of Distributive Property (IDP)}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * This module implements a division strategy based on the inverse of the}
\PYG{c+cm}{ * distributive property, modeled as a finite state machine. It solves a}
\PYG{c+cm}{ * division problem (T / S) by using a knowledge base (KB) of known}
\PYG{c+cm}{ * multiplication facts for the divisor S.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * The process is as follows:}
\PYG{c+cm}{ * 1.  Given a knowledge base of facts for S (e.g., 2*S, 5*S, 10*S), find the}
\PYG{c+cm}{ *     largest known multiple of S that is less than or equal to the}
\PYG{c+cm}{ *     remaining total (T).}
\PYG{c+cm}{ * 2.  Subtract this multiple from T.}
\PYG{c+cm}{ * 3.  Add the corresponding factor to a running total for the quotient.}
\PYG{c+cm}{ * 4.  Repeat the process with the new, smaller remainder until no more known}
\PYG{c+cm}{ *     multiples can be subtracted.}
\PYG{c+cm}{ * 5.  The final quotient is the sum of the factors, and the final remainder}
\PYG{c+cm}{ *     is what\PYGZsq{}s left of the total.}
\PYG{c+cm}{ * 6.  The strategy fails if the divisor (S) is not positive.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * The state is represented by the term:}
\PYG{c+cm}{ * `state(Name, Remaining, TotalQuotient, PartialTotal, PartialQuotient, KB, Divisor)`}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * The history of execution is captured as a list of steps:}
\PYG{c+cm}{ * `step(Name, Remainder, TotalQuotient, PartialTotal, PartialQuotient, Interpretation)`}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * @author Tilo Wiedera}
\PYG{c+cm}{ * @license MIT}
\PYG{c+cm}{ */}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{module}\PYG{p}{(}\PYG{l+s+sAtom}{smr\PYGZus{}div\PYGZus{}idp}\PYG{p}{,}
          \PYG{p}{[} \PYG{l+s+sAtom}{run\PYGZus{}idp}\PYG{o}{/}\PYG{l+m+mi}{5}
          \PYG{p}{]).}

\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{n+nf}{library}\PYG{p}{(}\PYG{l+s+sAtom}{lists}\PYG{p}{)).}

\PYG{c+c1}{\PYGZpc{}!      run\PYGZus{}idp(+T:integer, +S:integer, +KB\PYGZus{}in:list, \PYGZhy{}FinalQuotient:integer, \PYGZhy{}FinalRemainder:integer) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Executes the \PYGZsq{}Inverse of Distributive Property\PYGZsq{} division strategy for T / S.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       This predicate initializes and runs a state machine that models the IDP}
\PYG{c+c1}{\PYGZpc{}       strategy. It first checks for a positive divisor. If valid, it uses the}
\PYG{c+c1}{\PYGZpc{}       provided knowledge base `KB\PYGZus{}in` to repeatedly subtract the largest}
\PYG{c+c1}{\PYGZpc{}       possible known multiple of `S` from `T`, accumulating the quotient.}
\PYG{c+c1}{\PYGZpc{}       It traces the entire execution.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param T The Dividend (Total).}
\PYG{c+c1}{\PYGZpc{}       @param S The Divisor.}
\PYG{c+c1}{\PYGZpc{}       @param KB\PYGZus{}in A list of `Multiple\PYGZhy{}Factor` pairs representing known}
\PYG{c+c1}{\PYGZpc{}       multiplication facts for `S`. Example: `[20\PYGZhy{}2, 50\PYGZhy{}5, 100\PYGZhy{}10]` for S=10.}
\PYG{c+c1}{\PYGZpc{}       @param FinalQuotient The calculated quotient of the division.}
\PYG{c+c1}{\PYGZpc{}       @param FinalRemainder The calculated remainder. If S is not positive,}
\PYG{c+c1}{\PYGZpc{}       this will be `T`.}

\PYG{n+nf}{run\PYGZus{}idp}\PYG{p}{(}\PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{,} \PYG{n+nv}{KB\PYGZus{}in}\PYG{p}{,} \PYG{n+nv}{FinalQuotient}\PYG{p}{,} \PYG{n+nv}{FinalRemainder}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{p}{(}\PYG{n+nv}{S} \PYG{o}{=\PYGZlt{}} \PYG{l+m+mi}{0} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{c+c1}{\PYGZpc{} History is not exposed, but we could create it here if needed.}
        \PYG{c+c1}{\PYGZpc{} History = [step(q\PYGZus{}error, T, 0, 0, 0, \PYGZsq{}Error: Divisor must be positive.\PYGZsq{})],}
        \PYG{n+nv}{FinalQuotient} \PYG{o}{=} \PYG{l+s+sAtom}{\PYGZsq{}error\PYGZsq{}}\PYG{p}{,} \PYG{n+nv}{FinalRemainder} \PYG{o}{=} \PYG{n+nv}{T}
    \PYG{p}{;}
        \PYG{c+c1}{\PYGZpc{} Sort KB descending by the multiple (the key) for the greedy search.}
        \PYG{n+nf}{keysort}\PYG{p}{(}\PYG{n+nv}{KB\PYGZus{}in}\PYG{p}{,} \PYG{n+nv}{SortedKB\PYGZus{}asc}\PYG{p}{),}
        \PYG{n+nf}{reverse}\PYG{p}{(}\PYG{n+nv}{SortedKB\PYGZus{}asc}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{),}

        \PYG{n+nv}{InitialState} \PYG{o}{=} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}init}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),}

        \PYG{n+nf}{run}\PYG{p}{(}\PYG{n+nv}{InitialState}\PYG{p}{,} \PYG{p}{[],} \PYG{n+nv}{ReversedHistory}\PYG{p}{),}
        \PYG{n+nf}{reverse}\PYG{p}{(}\PYG{n+nv}{ReversedHistory}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{n+nv}{History}\PYG{p}{),} \PYG{c+c1}{\PYGZpc{} History is generated but not returned.}

        \PYG{p}{(}\PYG{n+nf}{last}\PYG{p}{(}\PYG{n+nv}{ReversedHistory}\PYG{p}{,} \PYG{n+nf}{step}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}accept}\PYG{p}{,} \PYG{n+nv}{FinalRemainder}\PYG{p}{,} \PYG{n+nv}{FinalQuotient}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{))} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}} \PYG{l+s+sAtom}{true} \PYG{p}{;}
         \PYG{p}{(}\PYG{n+nv}{FinalQuotient} \PYG{o}{=} \PYG{l+s+sAtom}{\PYGZsq{}error\PYGZsq{}}\PYG{p}{,} \PYG{n+nv}{FinalRemainder} \PYG{o}{=} \PYG{l+s+sAtom}{\PYGZsq{}error\PYGZsq{}}\PYG{p}{))}
    \PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} run/3 is the main recursive loop of the state machine.}
\PYG{n+nf}{run}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}accept}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{TQ}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{),} \PYG{n+nv}{Acc}\PYG{p}{,} \PYG{n+nv}{FinalHistory}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{string}\PYG{p}{(}\PYG{n+nv}{Interpretation}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Decomposition complete. Total Quotient = \PYGZti{}w.\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{TQ}\PYG{p}{]),}
    \PYG{n+nv}{HistoryEntry} \PYG{o}{=} \PYG{n+nf}{step}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}accept}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{TQ}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{Interpretation}\PYG{p}{),}
    \PYG{n+nv}{FinalHistory} \PYG{o}{=} \PYG{p}{[}\PYG{n+nv}{HistoryEntry} \PYG{p}{|} \PYG{n+nv}{Acc}\PYG{p}{].}

\PYG{n+nf}{run}\PYG{p}{(}\PYG{n+nv}{CurrentState}\PYG{p}{,} \PYG{n+nv}{Acc}\PYG{p}{,} \PYG{n+nv}{FinalHistory}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nv}{CurrentState}\PYG{p}{,} \PYG{n+nv}{NextState}\PYG{p}{,} \PYG{n+nv}{Interpretation}\PYG{p}{),}
    \PYG{n+nv}{CurrentState} \PYG{o}{=} \PYG{n+nf}{state}\PYG{p}{(}\PYG{n+nv}{Name}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{TQ}\PYG{p}{,} \PYG{n+nv}{PT}\PYG{p}{,} \PYG{n+nv}{PQ}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{),}
    \PYG{n+nv}{HistoryEntry} \PYG{o}{=} \PYG{n+nf}{step}\PYG{p}{(}\PYG{n+nv}{Name}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{TQ}\PYG{p}{,} \PYG{n+nv}{PT}\PYG{p}{,} \PYG{n+nv}{PQ}\PYG{p}{,} \PYG{n+nv}{Interpretation}\PYG{p}{),}
    \PYG{n+nf}{run}\PYG{p}{(}\PYG{n+nv}{NextState}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{HistoryEntry} \PYG{p}{|} \PYG{n+nv}{Acc}\PYG{p}{],} \PYG{n+nv}{FinalHistory}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} transition/3 defines the logic for moving from one state to the next.}

\PYG{c+c1}{\PYGZpc{} From q\PYGZus{}init, proceed to search the knowledge base.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}init}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{TQ}\PYG{p}{,} \PYG{n+nv}{PT}\PYG{p}{,} \PYG{n+nv}{PQ}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}search\PYGZus{}KB}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{TQ}\PYG{p}{,} \PYG{n+nv}{PT}\PYG{p}{,} \PYG{n+nv}{PQ}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{n+nv}{Interp}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{string}\PYG{p}{(}\PYG{n+nv}{Interp}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Initialize: \PYGZti{}w / \PYGZti{}w. Loaded known facts for \PYGZti{}w.\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{]).}

\PYG{c+c1}{\PYGZpc{} In q\PYGZus{}search\PYGZus{}KB, find the best known multiple to subtract.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}search\PYGZus{}KB}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{TQ}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}apply\PYGZus{}fact}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{TQ}\PYG{p}{,} \PYG{n+nv}{Multiple}\PYG{p}{,} \PYG{n+nv}{Factor}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{n+nv}{Interp}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{find\PYGZus{}best\PYGZus{}fact}\PYG{p}{(}\PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{Multiple}\PYG{p}{,} \PYG{n+nv}{Factor}\PYG{p}{),}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{string}\PYG{p}{(}\PYG{n+nv}{Interp}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Found known multiple: \PYGZti{}w (\PYGZti{}w x \PYGZti{}w).\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{Multiple}\PYG{p}{,} \PYG{n+nv}{Factor}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{]).}
\PYG{c+c1}{\PYGZpc{} If no suitable fact is found, the process is complete.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}search\PYGZus{}KB}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{TQ}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}accept}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{TQ}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}No suitable fact found.\PYGZsq{}}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{l+s+sAtom}{\PYGZbs{}+} \PYG{n+nf}{find\PYGZus{}best\PYGZus{}fact}\PYG{p}{(}\PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} In q\PYGZus{}apply\PYGZus{}fact, subtract the found multiple and add the factor to the quotient.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}apply\PYGZus{}fact}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{TQ}\PYG{p}{,} \PYG{n+nv}{PT}\PYG{p}{,} \PYG{n+nv}{PQ}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}search\PYGZus{}KB}\PYG{p}{,} \PYG{n+nv}{NewRem}\PYG{p}{,} \PYG{n+nv}{NewTQ}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{n+nv}{Interp}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{NewRem} \PYG{o}{is} \PYG{n+nv}{Rem} \PYG{o}{\PYGZhy{}} \PYG{n+nv}{PT}\PYG{p}{,}
    \PYG{n+nv}{NewTQ} \PYG{o}{is} \PYG{n+nv}{TQ} \PYG{o}{+} \PYG{n+nv}{PQ}\PYG{p}{,}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{string}\PYG{p}{(}\PYG{n+nv}{Interp}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Applied fact. Subtracted \PYGZti{}w. Added \PYGZti{}w to Quotient.\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{PT}\PYG{p}{,} \PYG{n+nv}{PQ}\PYG{p}{]).}

\PYG{c+c1}{\PYGZpc{} find\PYGZus{}best\PYGZus{}fact/4 is a helper to greedily find the largest applicable known fact.}
\PYG{c+c1}{\PYGZpc{} It assumes KB is sorted in descending order of multiples.}
\PYG{n+nf}{find\PYGZus{}best\PYGZus{}fact}\PYG{p}{([}\PYG{n+nv}{Multiple}\PYG{o}{\PYGZhy{}}\PYG{n+nv}{Factor} \PYG{p}{|} \PYG{k}{\PYGZus{}}\PYG{p}{],} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{Multiple}\PYG{p}{,} \PYG{n+nv}{Factor}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{Multiple} \PYG{o}{=\PYGZlt{}} \PYG{n+nv}{Rem}\PYG{p}{.}
\PYG{n+nf}{find\PYGZus{}best\PYGZus{}fact}\PYG{p}{([}\PYG{k}{\PYGZus{}} \PYG{p}{|} \PYG{n+nv}{Rest}\PYG{p}{],} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{BestMultiple}\PYG{p}{,} \PYG{n+nv}{BestFactor}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{find\PYGZus{}best\PYGZus{}fact}\PYG{p}{(}\PYG{n+nv}{Rest}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{BestMultiple}\PYG{p}{,} \PYG{n+nv}{BestFactor}\PYG{p}{).}
\end{MintedVerbatim}
