\begin{MintedVerbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/** \PYGZlt{}module\PYGZgt{} Reflective Pushdown Automaton for RMB Strategy}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * This module provides a detailed, low\PYGZhy{}level simulation of the \PYGZsq{}Rearranging}
\PYG{c+cm}{ * to Make Bases\PYGZsq{} (RMB) addition strategy, implemented as a Pushdown}
\PYG{c+cm}{ * Automaton (PDA).}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * **Note:** This appears to be an older or more experimental implementation}
\PYG{c+cm}{ * compared to `sar\PYGZus{}add\PYGZus{}rmb.pl`. It includes a unique \PYGZdq{}reflective\PYGZdq{} state}
\PYG{c+cm}{ * (`q6`) that demonstrates emergent behavior under specific conditions, which}
\PYG{c+cm}{ * is not present in the simplified `sar` models.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * The automaton processes an input string like `[4, \PYGZsq{}+\PYGZsq{}, 8]` and uses a}
\PYG{c+cm}{ * stack to manipulate the numbers. The core logic involves deciding whether}
\PYG{c+cm}{ * a standard RMB rearrangement is possible or if a special reflective loop}
\PYG{c+cm}{ * should be entered.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * The main entry point is `run/4`.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * @author Theodore M. Savich (Concept), Revised Implementation (AI Assist)}
\PYG{c+cm}{ * @license Unknown}
\PYG{c+cm}{ */}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{module}\PYG{p}{(}\PYG{l+s+sAtom}{refrmb\PYGZus{}corrected}\PYG{p}{,} \PYG{p}{[}\PYG{l+s+sAtom}{run}\PYG{o}{/}\PYG{l+m+mi}{4}\PYG{p}{]).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{n+nf}{library}\PYG{p}{(}\PYG{l+s+sAtom}{lists}\PYG{p}{)).}

\PYG{c+c1}{\PYGZpc{} \PYGZhy{}\PYGZhy{}\PYGZhy{} Dynamic Predicates for State \PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{p}{:\PYGZhy{}} \PYG{l+s+sAtom}{dynamic} \PYG{l+s+sAtom}{stored\PYGZus{}A}\PYG{o}{/}\PYG{l+m+mf}{1.}
\PYG{p}{:\PYGZhy{}} \PYG{l+s+sAtom}{dynamic} \PYG{l+s+sAtom}{stored\PYGZus{}B}\PYG{o}{/}\PYG{l+m+mf}{1.}
\PYG{p}{:\PYGZhy{}} \PYG{l+s+sAtom}{dynamic} \PYG{l+s+sAtom}{transition}\PYG{o}{/}\PYG{l+m+mf}{5.}
\PYG{p}{:\PYGZhy{}} \PYG{l+s+sAtom}{dynamic} \PYG{l+s+sAtom}{stack\PYGZus{}item}\PYG{o}{/}\PYG{l+m+mf}{1.}
\PYG{p}{:\PYGZhy{}} \PYG{l+s+sAtom}{dynamic} \PYG{l+s+sAtom}{reflection\PYGZus{}enabled}\PYG{o}{/}\PYG{l+m+mf}{1.}
\PYG{p}{:\PYGZhy{}} \PYG{l+s+sAtom}{dynamic} \PYG{l+s+sAtom}{decision\PYGZus{}made}\PYG{o}{/}\PYG{l+m+mf}{1.}

\PYG{c+c1}{\PYGZpc{} \PYGZhy{}\PYGZhy{}\PYGZhy{} Configuration \PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{n+nf}{base}\PYG{p}{(}\PYG{l+m+mi}{10}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} \PYGZhy{}\PYGZhy{}\PYGZhy{} Define valid digits \PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{n+nf}{digit}\PYG{p}{(}\PYG{n+nv}{D}\PYG{p}{)} \PYG{p}{:\PYGZhy{}} \PYG{n+nf}{member}\PYG{p}{(}\PYG{n+nv}{D}\PYG{p}{,} \PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+m+mi}{1}\PYG{p}{,}\PYG{l+m+mi}{2}\PYG{p}{,}\PYG{l+m+mi}{3}\PYG{p}{,}\PYG{l+m+mi}{4}\PYG{p}{,}\PYG{l+m+mi}{5}\PYG{p}{,}\PYG{l+m+mi}{6}\PYG{p}{,}\PYG{l+m+mi}{7}\PYG{p}{,}\PYG{l+m+mi}{8}\PYG{p}{,}\PYG{l+m+mi}{9}\PYG{p}{]).}

\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}           Main Entry Point           \PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}

\PYG{c+c1}{\PYGZpc{}!      run(+Start:integer, +Input:list, \PYGZhy{}Result:atom, +ReflectFlag:atom) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Runs the Reflective Pushdown Automaton simulation.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       This is the main entry point for the module. It initializes the}
\PYG{c+c1}{\PYGZpc{}       automaton\PYGZsq{}s state by clearing any dynamic facts from previous runs,}
\PYG{c+c1}{\PYGZpc{}       setting up the initial stack, and defining the static transitions.}
\PYG{c+c1}{\PYGZpc{}       It then starts the simulation process by calling `step/4`.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param Start The initial state of the automaton (e.g., `1`).}
\PYG{c+c1}{\PYGZpc{}       @param Input The input string to be processed, as a list of atoms}
\PYG{c+c1}{\PYGZpc{}       and numbers (e.g., `[4, \PYGZsq{}+\PYGZsq{}, 8]`).}
\PYG{c+c1}{\PYGZpc{}       @param Result The final result of the run, either `accept` or `error`.}
\PYG{c+c1}{\PYGZpc{}       @param ReflectFlag A flag (`y` or `n`) to enable or disable the}
\PYG{c+c1}{\PYGZpc{}       special reflective behavior of the automaton.}
\PYG{n+nf}{run}\PYG{p}{(}\PYG{n+nv}{Start}\PYG{p}{,} \PYG{n+nv}{Input}\PYG{p}{,} \PYG{n+nv}{Result}\PYG{p}{,} \PYG{n+nv}{ReflectFlag}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{c+c1}{\PYGZpc{} \PYGZhy{}\PYGZhy{}\PYGZhy{} Cleanup from any previous run \PYGZhy{}\PYGZhy{}\PYGZhy{}}
    \PYG{n+nf}{retractall}\PYG{p}{(}\PYG{n+nf}{stored\PYGZus{}A}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{p}{)),}
    \PYG{n+nf}{retractall}\PYG{p}{(}\PYG{n+nf}{stored\PYGZus{}B}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{p}{)),}
    \PYG{n+nf}{retractall}\PYG{p}{(}\PYG{n+nf}{reflection\PYGZus{}enabled}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{p}{)),}
    \PYG{n+nf}{retractall}\PYG{p}{(}\PYG{n+nf}{stack\PYGZus{}item}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{p}{)),}
    \PYG{n+nf}{retractall}\PYG{p}{(}\PYG{n+nf}{transition}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{p}{,}\PYG{k}{\PYGZus{}}\PYG{p}{,}\PYG{k}{\PYGZus{}}\PYG{p}{,}\PYG{k}{\PYGZus{}}\PYG{p}{,}\PYG{k}{\PYGZus{}}\PYG{p}{)),}
    \PYG{n+nf}{retractall}\PYG{p}{(}\PYG{n+nf}{decision\PYGZus{}made}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{p}{)),}

    \PYG{c+c1}{\PYGZpc{} \PYGZhy{}\PYGZhy{}\PYGZhy{} Setup for new run \PYGZhy{}\PYGZhy{}\PYGZhy{}}
    \PYG{n+nf}{assertz}\PYG{p}{(}\PYG{n+nf}{reflection\PYGZus{}enabled}\PYG{p}{(}\PYG{n+nv}{ReflectFlag}\PYG{p}{)),}
    \PYG{n+nf}{set\PYGZus{}global\PYGZus{}stack}\PYG{p}{([]),}
    \PYG{l+s+sAtom}{setup\PYGZus{}base\PYGZus{}transitions}\PYG{p}{,}
    \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}Starting run with reflection=\PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{ReflectFlag}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,} \PYG{l+s+sAtom}{nl}\PYG{p}{,}

    \PYG{c+c1}{\PYGZpc{} \PYGZhy{}\PYGZhy{}\PYGZhy{} Start processing \PYGZhy{}\PYGZhy{}\PYGZhy{}}
    \PYG{n+nf}{step}\PYG{p}{(}\PYG{n+nv}{Start}\PYG{p}{,} \PYG{n+nv}{Input}\PYG{p}{,} \PYG{p}{[],} \PYG{n+nv}{Result}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}        Main Processing Step          \PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}

\PYG{c+c1}{\PYGZpc{} step(+State, +Input, +Stack, \PYGZhy{}Result)}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{} The main recursive predicate that drives the PDA. In each step, it}
\PYG{c+c1}{\PYGZpc{} determines the next action based on the current state, input, and stack,}
\PYG{c+c1}{\PYGZpc{} then calls itself with the updated parameters. It handles terminal states,}
\PYG{c+c1}{\PYGZpc{} special decision points, and the reflective loop.}
\PYG{n+nf}{step}\PYG{p}{(}\PYG{n+nv}{State}\PYG{p}{,} \PYG{n+nv}{Input}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{Result}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{print\PYGZus{}config}\PYG{p}{(}\PYG{n+nv}{State}\PYG{p}{,} \PYG{n+nv}{Input}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{),}

    \PYG{c+c1}{\PYGZpc{} \PYGZhy{}\PYGZhy{}\PYGZhy{} Handle Terminal States \PYGZhy{}\PYGZhy{}\PYGZhy{}}
    \PYG{p}{(} \PYG{n+nv}{State} \PYG{o}{==} \PYG{l+m+mi}{4} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nv}{Result} \PYG{o}{=} \PYG{l+s+sAtom}{accept}\PYG{p}{,}
        \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}*** ACCEPT reached. ***\PYGZsq{}}\PYG{p}{),} \PYG{l+s+sAtom}{nl}
    \PYG{p}{;} \PYG{n+nv}{State} \PYG{o}{==} \PYG{l+m+mi}{5} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nv}{Result} \PYG{o}{=} \PYG{l+s+sAtom}{error}\PYG{p}{,}
        \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}*** ERROR reached. ***\PYGZsq{}}\PYG{p}{),} \PYG{l+s+sAtom}{nl}

    \PYG{c+c1}{\PYGZpc{} \PYGZhy{}\PYGZhy{}\PYGZhy{} Handle State 3: Decision Phase \PYGZhy{}\PYGZhy{}\PYGZhy{}}
    \PYG{p}{;} \PYG{n+nv}{State} \PYG{o}{==} \PYG{l+m+mi}{3}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZbs{}+} \PYG{n+nf}{decision\PYGZus{}made}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{p}{)} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{p}{!,}
        \PYG{n+nf}{make\PYGZus{}decision\PYGZus{}at\PYGZus{}q3}\PYG{p}{(}\PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{Decision}\PYG{p}{),}
        \PYG{n+nf}{assertz}\PYG{p}{(}\PYG{n+nf}{decision\PYGZus{}made}\PYG{p}{(}\PYG{n+nv}{Decision}\PYG{p}{)),}
        \PYG{n+nf}{setup\PYGZus{}q3\PYGZus{}transition}\PYG{p}{(}\PYG{n+nv}{Decision}\PYG{p}{),}
        \PYG{n+nf}{step}\PYG{p}{(}\PYG{n+nv}{State}\PYG{p}{,} \PYG{n+nv}{Input}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{Result}\PYG{p}{)}

    \PYG{c+c1}{\PYGZpc{} \PYGZhy{}\PYGZhy{}\PYGZhy{} Handle State 6: Reflection Loop \PYGZhy{}\PYGZhy{}\PYGZhy{}}
    \PYG{p}{;} \PYG{n+nv}{State} \PYG{o}{==} \PYG{l+m+mi}{6} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nf}{handle\PYGZus{}reflection\PYGZus{}state}\PYG{p}{(}\PYG{n+nv}{State}\PYG{p}{,} \PYG{n+nv}{Input}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{Result}\PYG{p}{)}

    \PYG{c+c1}{\PYGZpc{} \PYGZhy{}\PYGZhy{}\PYGZhy{} Default Transition Handling \PYGZhy{}\PYGZhy{}\PYGZhy{}}
    \PYG{p}{;} \PYG{n+nf}{select\PYGZus{}transition}\PYG{p}{(}\PYG{n+nv}{State}\PYG{p}{,} \PYG{n+nv}{Input}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{NextState}\PYG{p}{,} \PYG{n+nv}{NextInput}\PYG{p}{,} \PYG{n+nv}{NextStack}\PYG{p}{,} \PYG{n+nv}{Action}\PYG{p}{)} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nf}{print\PYGZus{}transition}\PYG{p}{(}\PYG{n+nv}{State}\PYG{p}{,} \PYG{n+nv}{Input}\PYG{p}{,} \PYG{n+nv}{Action}\PYG{p}{,} \PYG{n+nv}{NextState}\PYG{p}{),}
        \PYG{n+nf}{step}\PYG{p}{(}\PYG{n+nv}{NextState}\PYG{p}{,} \PYG{n+nv}{NextInput}\PYG{p}{,} \PYG{n+nv}{NextStack}\PYG{p}{,} \PYG{n+nv}{Result}\PYG{p}{)}

    \PYG{c+c1}{\PYGZpc{} \PYGZhy{}\PYGZhy{}\PYGZhy{} No Transition Found \PYGZhy{}\PYGZhy{}\PYGZhy{}}
    \PYG{p}{;} \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}*** ERROR: No transition found from state \PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{print\PYGZus{}state}\PYG{p}{(}\PYG{n+nv}{State}\PYG{p}{),}
      \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{} with input \PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{Input}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{} and stack \PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{Stack}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,}
      \PYG{n+nv}{Result} \PYG{o}{=} \PYG{l+s+sAtom}{error}
    \PYG{p}{).}

\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       State\PYGZhy{}Specific Logic         \PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}

\PYG{c+c1}{\PYGZpc{} \PYGZhy{}\PYGZhy{}\PYGZhy{} State 3: Decision Making \PYGZam{} Transition Setup \PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{c+c1}{\PYGZpc{} make\PYGZus{}decision\PYGZus{}at\PYGZus{}q3(+Stack, \PYGZhy{}Decision)}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{} Determines the next step from state q3. It decodes the numbers A and B}
\PYG{c+c1}{\PYGZpc{} from the stack, calculates the required transfer amount K, and then decides}
\PYG{c+c1}{\PYGZpc{} whether to (1) rearrange, (2) enter the reflective state, or (3) error out.}
\PYG{n+nf}{make\PYGZus{}decision\PYGZus{}at\PYGZus{}q3}\PYG{p}{(}\PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{Decision}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{decode\PYGZus{}stack\PYGZus{}final}\PYG{p}{(}\PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{n+nv}{K}\PYG{p}{,} \PYG{n+nv}{Possible}\PYG{p}{),}
    \PYG{p}{(} \PYG{n+nv}{Possible} \PYG{o}{==} \PYG{l+s+sAtom}{error} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}Decision@q3: Stack format error.\PYGZsq{}}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,}
        \PYG{n+nv}{Decision} \PYG{o}{=} \PYG{l+s+sAtom}{error}
    \PYG{p}{;} \PYG{n+nf}{reflection\PYGZus{}enabled}\PYG{p}{(}\PYG{n+nv}{RF}\PYG{p}{),} \PYG{n+nv}{RF} \PYG{o}{==} \PYG{l+s+sAtom}{y}\PYG{p}{,} \PYG{n+nf}{base}\PYG{p}{(}\PYG{n+nv}{Base}\PYG{p}{),} \PYG{n+nv}{A} \PYG{o}{=:=} \PYG{p}{(}\PYG{n+nv}{Base} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{6}\PYG{p}{),} \PYG{n+nv}{B} \PYG{o}{\PYGZgt{}=} \PYG{l+m+mi}{6} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}Decision@q3: Conditions met for Reflection (k=6).\PYGZsq{}}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,}
        \PYG{n+nv}{Decision} \PYG{o}{=} \PYG{l+s+sAtom}{reflect}
    \PYG{p}{;} \PYG{n+nv}{B} \PYG{o}{\PYGZgt{}=} \PYG{n+nv}{K} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}Decision@q3: Conditions met for Rearrangement (Accept).\PYGZsq{}}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,}
        \PYG{n+nv}{Decision} \PYG{o}{=} \PYG{l+s+sAtom}{accept}
    \PYG{p}{;}
        \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}Decision@q3: B \PYGZlt{} K, cannot rearrange standardly. Error.\PYGZsq{}}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,}
        \PYG{n+nv}{Decision} \PYG{o}{=} \PYG{l+s+sAtom}{error}
    \PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} setup\PYGZus{}q3\PYGZus{}transition(+Decision)}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{} Dynamically asserts the transition rule leading out of state q3 based on}
\PYG{c+c1}{\PYGZpc{} the decision made by make\PYGZus{}decision\PYGZus{}at\PYGZus{}q3/2.}
\PYG{n+nf}{setup\PYGZus{}q3\PYGZus{}transition}\PYG{p}{(}\PYG{l+s+sAtom}{accept}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{assertz}\PYG{p}{(}\PYG{n+nf}{transition}\PYG{p}{(}\PYG{l+m+mi}{3}\PYG{p}{,} \PYG{l+s+sAtom}{epsilon}\PYG{p}{,} \PYG{l+m+mi}{7}\PYG{p}{,} \PYG{l+s+sAtom}{rearrange\PYGZus{}action}\PYG{p}{,} \PYG{l+s+sAtom}{no}\PYG{p}{)),}
    \PYG{n+nf}{print\PYGZus{}dynamic\PYGZus{}transition}\PYG{p}{(}\PYG{l+m+mi}{3}\PYG{p}{,} \PYG{l+s+sAtom}{epsilon}\PYG{p}{,} \PYG{l+m+mi}{7}\PYG{p}{,} \PYG{l+s+sAtom}{rearrange\PYGZus{}action}\PYG{p}{).}
\PYG{n+nf}{setup\PYGZus{}q3\PYGZus{}transition}\PYG{p}{(}\PYG{l+s+sAtom}{error}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{assertz}\PYG{p}{(}\PYG{n+nf}{transition}\PYG{p}{(}\PYG{l+m+mi}{3}\PYG{p}{,} \PYG{l+s+sAtom}{epsilon}\PYG{p}{,} \PYG{l+m+mi}{5}\PYG{p}{,} \PYG{l+s+sAtom}{noop}\PYG{p}{,} \PYG{l+s+sAtom}{no}\PYG{p}{)),}
    \PYG{n+nf}{print\PYGZus{}dynamic\PYGZus{}transition}\PYG{p}{(}\PYG{l+m+mi}{3}\PYG{p}{,} \PYG{l+s+sAtom}{epsilon}\PYG{p}{,} \PYG{l+m+mi}{5}\PYG{p}{,} \PYG{l+s+sAtom}{noop}\PYG{p}{).}
\PYG{n+nf}{setup\PYGZus{}q3\PYGZus{}transition}\PYG{p}{(}\PYG{l+s+sAtom}{reflect}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{assertz}\PYG{p}{(}\PYG{n+nf}{transition}\PYG{p}{(}\PYG{l+m+mi}{3}\PYG{p}{,} \PYG{l+s+sAtom}{epsilon}\PYG{p}{,} \PYG{l+m+mi}{6}\PYG{p}{,} \PYG{l+s+sAtom}{setup\PYGZus{}reflect\PYGZus{}stack}\PYG{p}{,} \PYG{l+s+sAtom}{no}\PYG{p}{)),}
    \PYG{n+nf}{print\PYGZus{}dynamic\PYGZus{}transition}\PYG{p}{(}\PYG{l+m+mi}{3}\PYG{p}{,} \PYG{l+s+sAtom}{epsilon}\PYG{p}{,} \PYG{l+m+mi}{6}\PYG{p}{,} \PYG{l+s+sAtom}{setup\PYGZus{}reflect\PYGZus{}stack}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} \PYGZhy{}\PYGZhy{}\PYGZhy{} State 6: Reflection Loop Handling \PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{c+c1}{\PYGZpc{} handle\PYGZus{}reflection\PYGZus{}state(+State, +Input, +Stack, \PYGZhy{}Result)}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{} Manages the logic for the special reflective state q6. It checks the top of}
\PYG{c+c1}{\PYGZpc{} the stack. If it\PYGZsq{}s 0, the loop halts and transitions to the accept state.}
\PYG{c+c1}{\PYGZpc{} Otherwise, it applies a \PYGZdq{}reflect\PYGZus{}add\PYGZus{}6\PYGZus{}step\PYGZdq{} action to the stack and loops}
\PYG{c+c1}{\PYGZpc{} back to q6.}
\PYG{n+nf}{handle\PYGZus{}reflection\PYGZus{}state}\PYG{p}{(}\PYG{n+nv}{State}\PYG{p}{,} \PYG{n+nv}{Input}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{Result}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{Stack} \PYG{o}{=} \PYG{p}{[}\PYG{n+nv}{CurrentBmodBase} \PYG{p}{|} \PYG{k}{\PYGZus{}}\PYG{n+nv}{RestStack}\PYG{p}{],}
    \PYG{p}{(} \PYG{n+nv}{CurrentBmodBase} \PYG{o}{==} \PYG{l+m+mi}{0} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}State q6: Halt condition met (Stack top == 0). Transitioning to Accept (q4).\PYGZsq{}}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,}
        \PYG{n+nv}{NextState} \PYG{o}{=} \PYG{l+m+mi}{4}\PYG{p}{,}
        \PYG{n+nv}{NextInput} \PYG{o}{=} \PYG{n+nv}{Input}\PYG{p}{,}
        \PYG{n+nv}{NextStack} \PYG{o}{=} \PYG{n+nv}{Stack}\PYG{p}{,}
        \PYG{n+nf}{print\PYGZus{}pseudo\PYGZus{}transition}\PYG{p}{(}\PYG{n+nv}{State}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}halt\PYGZus{}check\PYGZsq{}}\PYG{p}{,} \PYG{n+nv}{NextState}\PYG{p}{),}
        \PYG{n+nf}{step}\PYG{p}{(}\PYG{n+nv}{NextState}\PYG{p}{,} \PYG{n+nv}{NextInput}\PYG{p}{,} \PYG{n+nv}{NextStack}\PYG{p}{,} \PYG{n+nv}{Result}\PYG{p}{)}
    \PYG{p}{;}
        \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}State q6: Continuing reflection loop...\PYGZsq{}}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,}
        \PYG{n+nv}{Action} \PYG{o}{=} \PYG{l+s+sAtom}{reflect\PYGZus{}add\PYGZus{}6\PYGZus{}step}\PYG{p}{,}
        \PYG{n+nf}{apply\PYGZus{}action}\PYG{p}{(}\PYG{n+nv}{Action}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{NextStack}\PYG{p}{),}
        \PYG{n+nv}{NextState} \PYG{o}{=} \PYG{l+m+mi}{6}\PYG{p}{,}
        \PYG{n+nv}{NextInput} \PYG{o}{=} \PYG{n+nv}{Input}\PYG{p}{,}
        \PYG{n+nf}{print\PYGZus{}pseudo\PYGZus{}transition}\PYG{p}{(}\PYG{n+nv}{State}\PYG{p}{,} \PYG{n+nv}{Action}\PYG{p}{,} \PYG{n+nv}{NextState}\PYG{p}{),}
        \PYG{n+nf}{step}\PYG{p}{(}\PYG{n+nv}{NextState}\PYG{p}{,} \PYG{n+nv}{NextInput}\PYG{p}{,} \PYG{n+nv}{NextStack}\PYG{p}{,} \PYG{n+nv}{Result}\PYG{p}{)}
    \PYG{p}{).}


\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}        Transition Selection          \PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}

\PYG{c+c1}{\PYGZpc{} Select transition based on input symbol}
\PYG{c+c1}{\PYGZpc{} Modified to apply action and return the resulting NextStack}
\PYG{n+nf}{select\PYGZus{}transition}\PYG{p}{(}\PYG{n+nv}{State}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{Sym}\PYG{p}{|}\PYG{n+nv}{RestInput}\PYG{p}{],} \PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{NextState}\PYG{p}{,} \PYG{n+nv}{RestInput}\PYG{p}{,} \PYG{n+nv}{NextStack}\PYG{p}{,} \PYG{n+nv}{Action}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nv}{State}\PYG{p}{,} \PYG{n+nv}{Sym}\PYG{p}{,} \PYG{n+nv}{NextState}\PYG{p}{,} \PYG{n+nv}{Action}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{),}
    \PYG{p}{!,}
    \PYG{n+nf}{apply\PYGZus{}action}\PYG{p}{(}\PYG{n+nv}{Action}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{NextStack}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} Select epsilon transition if no symbol match}
\PYG{c+c1}{\PYGZpc{} Modified to apply action and return the resulting NextStack}
\PYG{n+nf}{select\PYGZus{}transition}\PYG{p}{(}\PYG{n+nv}{State}\PYG{p}{,} \PYG{n+nv}{Input}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{NextState}\PYG{p}{,} \PYG{n+nv}{Input}\PYG{p}{,} \PYG{n+nv}{NextStack}\PYG{p}{,} \PYG{n+nv}{Action}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nv}{State}\PYG{p}{,} \PYG{l+s+sAtom}{epsilon}\PYG{p}{,} \PYG{n+nv}{NextState}\PYG{p}{,} \PYG{n+nv}{Action}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{),}
    \PYG{p}{!,}
    \PYG{n+nf}{apply\PYGZus{}action}\PYG{p}{(}\PYG{n+nv}{Action}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{NextStack}\PYG{p}{).}


\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}           Action Handlers            \PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}

\PYG{c+c1}{\PYGZpc{} Dispatcher for actions \PYGZhy{} Actions NOW update global stack if they modify it}

\PYG{n+nf}{apply\PYGZus{}action}\PYG{p}{(}\PYG{l+s+sAtom}{noop}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{).}

\PYG{n+nf}{apply\PYGZus{}action}\PYG{p}{(}\PYG{n+nf}{push}\PYG{p}{(}\PYG{n+nv}{X}\PYG{p}{),} \PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{NewStack}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{p}{(}\PYG{n+nf}{digit}\PYG{p}{(}\PYG{n+nv}{X}\PYG{p}{)} \PYG{p}{;} \PYG{n+nv}{X} \PYG{o}{==} \PYG{l+s+sAtom}{\PYGZsq{}\PYGZsh{}\PYGZsq{}}\PYG{p}{),} \PYG{p}{!,}
    \PYG{n+nv}{NewStack} \PYG{o}{=} \PYG{p}{[}\PYG{n+nv}{X}\PYG{p}{|}\PYG{n+nv}{Stack}\PYG{p}{],}
    \PYG{n+nf}{set\PYGZus{}global\PYGZus{}stack}\PYG{p}{(}\PYG{n+nv}{NewStack}\PYG{p}{).}

\PYG{n+nf}{apply\PYGZus{}action}\PYG{p}{(}\PYG{l+s+sAtom}{pop}\PYG{p}{,} \PYG{p}{[}\PYG{k}{\PYGZus{}}\PYG{p}{|}\PYG{n+nv}{Stack}\PYG{p}{],} \PYG{n+nv}{NewStack}\PYG{p}{)} \PYG{p}{:\PYGZhy{}} \PYG{p}{!,}
    \PYG{n+nv}{NewStack} \PYG{o}{=} \PYG{n+nv}{Stack}\PYG{p}{,}
    \PYG{n+nf}{set\PYGZus{}global\PYGZus{}stack}\PYG{p}{(}\PYG{n+nv}{NewStack}\PYG{p}{).}
\PYG{n+nf}{apply\PYGZus{}action}\PYG{p}{(}\PYG{l+s+sAtom}{pop}\PYG{p}{,} \PYG{p}{[],} \PYG{p}{[])} \PYG{p}{:\PYGZhy{}} \PYG{p}{!,}
    \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}Warning: Pop attempted on empty stack.\PYGZsq{}}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{.}

\PYG{n+nf}{apply\PYGZus{}action}\PYG{p}{(}\PYG{l+s+sAtom}{rearrange\PYGZus{}action}\PYG{p}{,} \PYG{n+nv}{InitialStack}\PYG{p}{,} \PYG{n+nv}{FinalStack}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}Action: Performing RMB rearrangement...\PYGZsq{}}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,}
    \PYG{n+nf}{rearrange\PYGZus{}stack}\PYG{p}{(}\PYG{n+nv}{InitialStack}\PYG{p}{,} \PYG{n+nv}{FinalStack}\PYG{p}{),}
    \PYG{p}{!.}

\PYG{n+nf}{apply\PYGZus{}action}\PYG{p}{(}\PYG{l+s+sAtom}{setup\PYGZus{}reflect\PYGZus{}stack}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{NewStack}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}Action: Setting up stack for reflection state q6...\PYGZsq{}}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,}
    \PYG{n+nf}{split\PYGZus{}at\PYGZus{}hash}\PYG{p}{(}\PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{APart}\PYG{p}{,} \PYG{n+nv}{BPart}\PYG{p}{),}
    \PYG{n+nf}{digits\PYGZus{}to\PYGZus{}num}\PYG{p}{(}\PYG{n+nv}{BPart}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{),}
    \PYG{n+nf}{base}\PYG{p}{(}\PYG{n+nv}{Base}\PYG{p}{),}
    \PYG{n+nv}{BmodBase} \PYG{o}{is} \PYG{n+nv}{B} \PYG{o}{mod} \PYG{n+nv}{Base}\PYG{p}{,}
    \PYG{n+nf}{append}\PYG{p}{([}\PYG{l+s+sAtom}{\PYGZsq{}\PYGZsh{}\PYGZsq{}}\PYG{p}{],} \PYG{n+nv}{APart}\PYG{p}{,} \PYG{n+nv}{RestOfStack}\PYG{p}{),}
    \PYG{n+nv}{NewStack} \PYG{o}{=} \PYG{p}{[}\PYG{n+nv}{BmodBase} \PYG{p}{|} \PYG{n+nv}{RestOfStack}\PYG{p}{],}
    \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{} \PYGZhy{}\PYGZgt{} New stack top for B (mod Base): \PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{BmodBase}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,}
    \PYG{n+nf}{set\PYGZus{}global\PYGZus{}stack}\PYG{p}{(}\PYG{n+nv}{NewStack}\PYG{p}{),!.}

\PYG{n+nf}{apply\PYGZus{}action}\PYG{p}{(}\PYG{l+s+sAtom}{reflect\PYGZus{}add\PYGZus{}6\PYGZus{}step}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{NewStack}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{Stack} \PYG{o}{=} \PYG{p}{[}\PYG{n+nv}{CurrentB} \PYG{p}{|} \PYG{n+nv}{Rest}\PYG{p}{],} \PYG{p}{!,}
    \PYG{n+nf}{base}\PYG{p}{(}\PYG{n+nv}{Base}\PYG{p}{),}
    \PYG{n+nv}{K\PYGZus{}reflect} \PYG{o}{is} \PYG{l+m+mi}{6}\PYG{p}{,}
    \PYG{n+nv}{NewB} \PYG{o}{is} \PYG{p}{(}\PYG{n+nv}{CurrentB} \PYG{o}{+} \PYG{n+nv}{K\PYGZus{}reflect}\PYG{p}{)} \PYG{o}{mod} \PYG{n+nv}{Base}\PYG{p}{,}
    \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}Action: Reflection step: \PYGZsq{}}\PYG{p}{),}
    \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{CurrentB}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{} + \PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{K\PYGZus{}reflect}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{} mod \PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{Base}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{} = \PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{NewB}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,}
    \PYG{n+nv}{NewStack} \PYG{o}{=} \PYG{p}{[}\PYG{n+nv}{NewB} \PYG{p}{|} \PYG{n+nv}{Rest}\PYG{p}{],}
    \PYG{n+nf}{set\PYGZus{}global\PYGZus{}stack}\PYG{p}{(}\PYG{n+nv}{NewStack}\PYG{p}{).}

\PYG{n+nf}{apply\PYGZus{}action}\PYG{p}{(}\PYG{n+nv}{Action}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}Warning: Unknown action encountered: \PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{Action}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{.}

\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}      RMB Rearrangement Logic         \PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}

\PYG{c+c1}{\PYGZpc{} Modified to use InitialStack argument instead of current\PYGZus{}stack}
\PYG{n+nf}{rearrange\PYGZus{}stack}\PYG{p}{(}\PYG{n+nv}{InitialStack}\PYG{p}{,} \PYG{n+nv}{FinalStack}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{decode\PYGZus{}stack\PYGZus{}final}\PYG{p}{(}\PYG{n+nv}{InitialStack}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{n+nv}{K}\PYG{p}{,} \PYG{n+nv}{Possible}\PYG{p}{),}
    \PYG{p}{(} \PYG{n+nv}{Possible} \PYG{o}{==} \PYG{l+s+sAtom}{ok}\PYG{p}{,} \PYG{n+nv}{B} \PYG{o}{\PYGZgt{}=} \PYG{n+nv}{K} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nf}{base}\PYG{p}{(}\PYG{n+nv}{Base}\PYG{p}{),}
        \PYG{n+nv}{Anew} \PYG{o}{is} \PYG{n+nv}{A} \PYG{o}{+} \PYG{n+nv}{K}\PYG{p}{,}
        \PYG{n+nv}{Bnew} \PYG{o}{is} \PYG{n+nv}{B} \PYG{o}{\PYGZhy{}} \PYG{n+nv}{K}\PYG{p}{,}
        \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{} \PYGZhy{}\PYGZgt{} Rearranging: A=\PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{A}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}, B=\PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{B}\PYG{p}{),}
        \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}, K=\PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{K}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,}
        \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}    \PYGZhy{}\PYGZgt{} New A=(A+K)=\PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{Anew}\PYG{p}{),}
        \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}, New B=(B\PYGZhy{}K)=\PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{Bnew}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,}
        \PYG{n+nf}{num\PYGZus{}to\PYGZus{}digits}\PYG{p}{(}\PYG{n+nv}{Anew}\PYG{p}{,} \PYG{n+nv}{AnewDigits}\PYG{p}{),}
        \PYG{n+nf}{num\PYGZus{}to\PYGZus{}digits}\PYG{p}{(}\PYG{n+nv}{Bnew}\PYG{p}{,} \PYG{n+nv}{BnewDigits}\PYG{p}{),}
        \PYG{n+nf}{reverse}\PYG{p}{(}\PYG{n+nv}{BnewDigits}\PYG{p}{,} \PYG{n+nv}{RevB}\PYG{p}{),}
        \PYG{n+nf}{reverse}\PYG{p}{(}\PYG{n+nv}{AnewDigits}\PYG{p}{,} \PYG{n+nv}{RevA}\PYG{p}{),}
        \PYG{n+nf}{append}\PYG{p}{(}\PYG{n+nv}{RevB}\PYG{p}{,} \PYG{p}{[}\PYG{l+s+sAtom}{\PYGZsq{}\PYGZsh{}\PYGZsq{}}\PYG{p}{|}\PYG{n+nv}{RevA}\PYG{p}{],} \PYG{n+nv}{NewStackReversed}\PYG{p}{),}
        \PYG{n+nf}{reverse}\PYG{p}{(}\PYG{n+nv}{NewStackReversed}\PYG{p}{,} \PYG{n+nv}{FinalStack}\PYG{p}{),}
        \PYG{n+nf}{set\PYGZus{}global\PYGZus{}stack}\PYG{p}{(}\PYG{n+nv}{FinalStack}\PYG{p}{),}
        \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{} \PYGZhy{}\PYGZgt{} Rearrangement complete. New stack: \PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{FinalStack}\PYG{p}{),} \PYG{l+s+sAtom}{nl}
    \PYG{p}{;}
      \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}Error: Rearrange action called inappropriately or decode failed.\PYGZsq{}}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,}
      \PYG{n+nv}{FinalStack} \PYG{o}{=} \PYG{n+nv}{InitialStack}
    \PYG{p}{).}

\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}          Stack \PYGZam{} Arithmetic          \PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}

\PYG{c+c1}{\PYGZpc{} Decode stack into A, B, K. Returns \PYGZsq{}ok\PYGZsq{} or \PYGZsq{}error\PYGZsq{} in Possible.}
\PYG{c+c1}{\PYGZpc{} Operates purely on the input Stack argument.}
\PYG{n+nf}{decode\PYGZus{}stack\PYGZus{}final}\PYG{p}{(}\PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{n+nv}{K}\PYG{p}{,} \PYG{n+nv}{Possible}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{p}{(} \PYG{n+nf}{member}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}\PYGZsh{}\PYGZsq{}}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{)} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nf}{split\PYGZus{}at\PYGZus{}hash}\PYG{p}{(}\PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{APart}\PYG{p}{,} \PYG{n+nv}{BPart}\PYG{p}{),}
        \PYG{p}{(} \PYG{n+nf}{digits\PYGZus{}to\PYGZus{}num}\PYG{p}{(}\PYG{n+nv}{APart}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{),} \PYG{n+nf}{digits\PYGZus{}to\PYGZus{}num}\PYG{p}{(}\PYG{n+nv}{BPart}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{)} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
            \PYG{n+nf}{retractall}\PYG{p}{(}\PYG{n+nf}{stored\PYGZus{}A}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{p}{)),} \PYG{n+nf}{retractall}\PYG{p}{(}\PYG{n+nf}{stored\PYGZus{}B}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{p}{)),}
            \PYG{n+nf}{assertz}\PYG{p}{(}\PYG{n+nf}{stored\PYGZus{}A}\PYG{p}{(}\PYG{n+nv}{A}\PYG{p}{)),} \PYG{n+nf}{assertz}\PYG{p}{(}\PYG{n+nf}{stored\PYGZus{}B}\PYG{p}{(}\PYG{n+nv}{B}\PYG{p}{)),}
            \PYG{n+nf}{base}\PYG{p}{(}\PYG{n+nv}{Base}\PYG{p}{),}
            \PYG{p}{(} \PYG{n+nv}{A} \PYG{o}{=\PYGZlt{}} \PYG{n+nv}{Base} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}} \PYG{n+nv}{K} \PYG{o}{is} \PYG{n+nv}{Base} \PYG{o}{\PYGZhy{}} \PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{Possible} \PYG{o}{=} \PYG{l+s+sAtom}{ok}
            \PYG{p}{;} \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}Error: Decoded A \PYGZgt{} Base.\PYGZsq{}}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,} \PYG{n+nv}{Possible} \PYG{o}{=} \PYG{l+s+sAtom}{error}
            \PYG{p}{)}
        \PYG{p}{;} \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}Error: Failed to convert digits to numbers.\PYGZsq{}}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,} \PYG{n+nv}{Possible} \PYG{o}{=} \PYG{l+s+sAtom}{error}\PYG{p}{,} \PYG{n+nv}{A} \PYG{o}{=} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{n+nv}{B} \PYG{o}{=} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{n+nv}{K} \PYG{o}{=} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}
        \PYG{p}{)}
    \PYG{p}{;}
        \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}Error: Stack missing \PYGZdq{}\PYGZsh{}\PYGZdq{} separator.\PYGZsq{}}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,}
        \PYG{n+nv}{Possible} \PYG{o}{=} \PYG{l+s+sAtom}{error}\PYG{p}{,} \PYG{n+nv}{A} \PYG{o}{=} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{n+nv}{B} \PYG{o}{=} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{n+nv}{K} \PYG{o}{=} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}
    \PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} Split stack list at \PYGZsq{}\PYGZsh{}\PYGZsq{} marker}
\PYG{n+nf}{split\PYGZus{}at\PYGZus{}hash}\PYG{p}{(}\PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{APart}\PYG{p}{,} \PYG{n+nv}{BPart}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{reverse}\PYG{p}{(}\PYG{n+nv}{Stack}\PYG{p}{,} \PYG{n+nv}{RevStack}\PYG{p}{),}
    \PYG{n+nf}{append}\PYG{p}{(}\PYG{n+nv}{RevA}\PYG{p}{,} \PYG{p}{[}\PYG{l+s+sAtom}{\PYGZsq{}\PYGZsh{}\PYGZsq{}}\PYG{p}{|}\PYG{n+nv}{RevB}\PYG{p}{],} \PYG{n+nv}{RevStack}\PYG{p}{),} \PYG{p}{!,}
    \PYG{n+nf}{reverse}\PYG{p}{(}\PYG{n+nv}{RevA}\PYG{p}{,} \PYG{n+nv}{APart}\PYG{p}{),}
    \PYG{n+nf}{reverse}\PYG{p}{(}\PYG{n+nv}{RevB}\PYG{p}{,} \PYG{n+nv}{BPart}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} Convert list of digits to number}
\PYG{n+nf}{digits\PYGZus{}to\PYGZus{}num}\PYG{p}{(}\PYG{n+nv}{Digs}\PYG{p}{,} \PYG{n+nv}{N}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{foldl}\PYG{p}{(}\PYG{l+s+sAtom}{add\PYGZus{}digit}\PYG{p}{,} \PYG{n+nv}{Digs}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{N}\PYG{p}{).}
\PYG{n+nf}{add\PYGZus{}digit}\PYG{p}{(}\PYG{n+nv}{D}\PYG{p}{,} \PYG{n+nv}{Acc}\PYG{p}{,} \PYG{n+nv}{Val}\PYG{p}{)} \PYG{p}{:\PYGZhy{}} \PYG{n+nv}{Val} \PYG{o}{is} \PYG{n+nv}{Acc}\PYG{o}{*}\PYG{l+m+mi}{10} \PYG{o}{+} \PYG{n+nv}{D}\PYG{p}{.}

\PYG{c+c1}{\PYGZpc{} Convert number to list of digits}
\PYG{n+nf}{num\PYGZus{}to\PYGZus{}digits}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,} \PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{])} \PYG{p}{:\PYGZhy{}} \PYG{p}{!.}
\PYG{n+nf}{num\PYGZus{}to\PYGZus{}digits}\PYG{p}{(}\PYG{n+nv}{N}\PYG{p}{,} \PYG{n+nv}{Digs}\PYG{p}{)} \PYG{p}{:\PYGZhy{}} \PYG{n+nv}{N} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nf}{num\PYGZus{}to\PYGZus{}digits\PYGZus{}acc}\PYG{p}{(}\PYG{n+nv}{N}\PYG{p}{,} \PYG{p}{[],} \PYG{n+nv}{Digs}\PYG{p}{).}
\PYG{n+nf}{num\PYGZus{}to\PYGZus{}digits\PYGZus{}acc}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{Acc}\PYG{p}{,} \PYG{n+nv}{Acc}\PYG{p}{)} \PYG{p}{:\PYGZhy{}} \PYG{p}{!.}
\PYG{n+nf}{num\PYGZus{}to\PYGZus{}digits\PYGZus{}acc}\PYG{p}{(}\PYG{n+nv}{N}\PYG{p}{,} \PYG{n+nv}{Acc}\PYG{p}{,} \PYG{n+nv}{Digs}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{N} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}\PYG{p}{,}
    \PYG{n+nv}{D} \PYG{o}{is} \PYG{n+nv}{N} \PYG{o}{mod} \PYG{l+m+mi}{10}\PYG{p}{,}
    \PYG{n+nv}{N1} \PYG{o}{is} \PYG{n+nv}{N} \PYG{o}{//} \PYG{l+m+mi}{10}\PYG{p}{,}
    \PYG{n+nf}{num\PYGZus{}to\PYGZus{}digits\PYGZus{}acc}\PYG{p}{(}\PYG{n+nv}{N1}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{D}\PYG{p}{|}\PYG{n+nv}{Acc}\PYG{p}{],} \PYG{n+nv}{Digs}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}         Global Stack Access          \PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}

\PYG{c+c1}{\PYGZpc{} Update the global stack representation (used by actions that modify stack)}
\PYG{n+nf}{set\PYGZus{}global\PYGZus{}stack}\PYG{p}{(}\PYG{n+nv}{NewStack}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{retractall}\PYG{p}{(}\PYG{n+nf}{stack\PYGZus{}item}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{p}{)),}
    \PYG{n+nf}{forall}\PYG{p}{(}\PYG{n+nf}{member}\PYG{p}{(}\PYG{n+nv}{E}\PYG{p}{,} \PYG{n+nv}{NewStack}\PYG{p}{),} \PYG{n+nf}{assertz}\PYG{p}{(}\PYG{n+nf}{stack\PYGZus{}item}\PYG{p}{(}\PYG{n+nv}{E}\PYG{p}{))).}

\PYG{c+c1}{\PYGZpc{} Retrieve the current global stack (ONLY for external query/debug if needed)}
\PYG{c+c1}{\PYGZpc{} Note: Main logic should rely on stack passed through step/4 arguments.}
\PYG{n+nf}{current\PYGZus{}stack\PYGZus{}global}\PYG{p}{(}\PYG{n+nv}{Stack}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{findall}\PYG{p}{(}\PYG{n+nv}{X}\PYG{p}{,} \PYG{n+nf}{stack\PYGZus{}item}\PYG{p}{(}\PYG{n+nv}{X}\PYG{p}{),} \PYG{n+nv}{S}\PYG{p}{),}
    \PYG{n+nf}{reverse}\PYG{p}{(}\PYG{n+nv}{S}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}     Static Transition Setup          \PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}

\PYG{n+nf}{setup\PYGZus{}base\PYGZus{}transitions} \PYG{o}{:\PYGZhy{}}
    \PYG{c+c1}{\PYGZpc{} q1: reading A until \PYGZsq{}+\PYGZsq{}}
    \PYG{n+nf}{forall}\PYG{p}{(}\PYG{n+nf}{digit}\PYG{p}{(}\PYG{n+nv}{D}\PYG{p}{),} \PYG{n+nf}{assertz}\PYG{p}{(}\PYG{n+nf}{transition}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{n+nv}{D}\PYG{p}{,} \PYG{l+m+mi}{1}\PYG{p}{,} \PYG{n+nf}{push}\PYG{p}{(}\PYG{n+nv}{D}\PYG{p}{),} \PYG{l+s+sAtom}{no}\PYG{p}{))),}
    \PYG{n+nf}{assertz}\PYG{p}{(}\PYG{n+nf}{transition}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}+\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mi}{2}\PYG{p}{,} \PYG{n+nf}{push}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}\PYGZsh{}\PYGZsq{}}\PYG{p}{),} \PYG{l+s+sAtom}{no}\PYG{p}{)),}
    \PYG{c+c1}{\PYGZpc{} q2: reading B digits until end of input}
    \PYG{n+nf}{forall}\PYG{p}{(}\PYG{n+nf}{digit}\PYG{p}{(}\PYG{n+nv}{D}\PYG{p}{),} \PYG{n+nf}{assertz}\PYG{p}{(}\PYG{n+nf}{transition}\PYG{p}{(}\PYG{l+m+mi}{2}\PYG{p}{,} \PYG{n+nv}{D}\PYG{p}{,} \PYG{l+m+mi}{2}\PYG{p}{,} \PYG{n+nf}{push}\PYG{p}{(}\PYG{n+nv}{D}\PYG{p}{),} \PYG{l+s+sAtom}{no}\PYG{p}{))),}
    \PYG{n+nf}{assertz}\PYG{p}{(}\PYG{n+nf}{transition}\PYG{p}{(}\PYG{l+m+mi}{2}\PYG{p}{,} \PYG{l+s+sAtom}{epsilon}\PYG{p}{,} \PYG{l+m+mi}{3}\PYG{p}{,} \PYG{l+s+sAtom}{noop}\PYG{p}{,} \PYG{l+s+sAtom}{no}\PYG{p}{)),}
    \PYG{c+c1}{\PYGZpc{} q7: after successful rearranging, go to q4 (accept)}
    \PYG{n+nf}{assertz}\PYG{p}{(}\PYG{n+nf}{transition}\PYG{p}{(}\PYG{l+m+mi}{7}\PYG{p}{,} \PYG{l+s+sAtom}{epsilon}\PYG{p}{,} \PYG{l+m+mi}{4}\PYG{p}{,} \PYG{l+s+sAtom}{noop}\PYG{p}{,} \PYG{l+s+sAtom}{no}\PYG{p}{)).}

\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Printing \PYGZam{} Debug Helpers       \PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}\PYGZpc{}}

\PYG{c+c1}{\PYGZpc{} Modified to print the Stack argument passed to it.}
\PYG{n+nf}{print\PYGZus{}config}\PYG{p}{(}\PYG{n+nv}{State}\PYG{p}{,} \PYG{n+nv}{Input}\PYG{p}{,} \PYG{n+nv}{Stack}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZsq{}}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{,}
    \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}State: \PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{print\PYGZus{}state}\PYG{p}{(}\PYG{n+nv}{State}\PYG{p}{),}
    \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{} | Input: \PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{Input}\PYG{p}{),}
    \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{} | Stack: \PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{Stack}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{.}

\PYG{n+nf}{print\PYGZus{}state}\PYG{p}{(}\PYG{n+nv}{S}\PYG{p}{)} \PYG{p}{:\PYGZhy{}} \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}q\PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{S}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} Print standard transitions found via transition/5}
\PYG{n+nf}{print\PYGZus{}transition}\PYG{p}{(}\PYG{n+nv}{SFrom}\PYG{p}{,} \PYG{n+nv}{Input}\PYG{p}{,} \PYG{n+nv}{Action}\PYG{p}{,} \PYG{n+nv}{STo}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{p}{(} \PYG{n+nv}{Input} \PYG{o}{==} \PYG{p}{[]} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}} \PYG{n+nv}{InputSym} \PYG{o}{=} \PYG{l+s+sAtom}{\PYGZsq{}epsilon\PYGZsq{}}
    \PYG{p}{;} \PYG{n+nv}{Input} \PYG{o}{=} \PYG{p}{[}\PYG{n+nv}{InputSym}\PYG{p}{|}\PYG{k}{\PYGZus{}}\PYG{p}{]}
    \PYG{p}{),}
    \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}Transition: \PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{print\PYGZus{}state}\PYG{p}{(}\PYG{n+nv}{SFrom}\PYG{p}{),}
    \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{} \PYGZhy{}\PYGZhy{}[\PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{InputSym}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}:\PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{Action}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}]\PYGZhy{}\PYGZhy{}\PYGZgt{} \PYGZsq{}}\PYG{p}{),}
    \PYG{n+nf}{print\PYGZus{}state}\PYG{p}{(}\PYG{n+nv}{STo}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{.}

\PYG{c+c1}{\PYGZpc{} Print dynamically added transitions from q3}
\PYG{n+nf}{print\PYGZus{}dynamic\PYGZus{}transition}\PYG{p}{(}\PYG{n+nv}{SFrom}\PYG{p}{,} \PYG{n+nv}{Sym}\PYG{p}{,} \PYG{n+nv}{STo}\PYG{p}{,} \PYG{n+nv}{Action}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
     \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}Dynamically Added Transition: \PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{print\PYGZus{}state}\PYG{p}{(}\PYG{n+nv}{SFrom}\PYG{p}{),}
     \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{} \PYGZhy{}\PYGZhy{}[\PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{Sym}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}:\PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{Action}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}]\PYGZhy{}\PYGZhy{}\PYGZgt{} \PYGZsq{}}\PYG{p}{),}
     \PYG{n+nf}{print\PYGZus{}state}\PYG{p}{(}\PYG{n+nv}{STo}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{.}

\PYG{c+c1}{\PYGZpc{} Print pseudo\PYGZhy{}transitions decided within state 6 logic}
\PYG{n+nf}{print\PYGZus{}pseudo\PYGZus{}transition}\PYG{p}{(}\PYG{n+nv}{SFrom}\PYG{p}{,} \PYG{n+nv}{ActionOrCheck}\PYG{p}{,} \PYG{n+nv}{STo}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
     \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}State q6 Logic: \PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{print\PYGZus{}state}\PYG{p}{(}\PYG{n+nv}{SFrom}\PYG{p}{),}
     \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{} \PYGZhy{}\PYGZhy{}[\PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}epsilon\PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}:\PYGZsq{}}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{n+nv}{ActionOrCheck}\PYG{p}{),} \PYG{n+nf}{write}\PYG{p}{(}\PYG{l+s+sAtom}{\PYGZsq{}]\PYGZhy{}\PYGZhy{}\PYGZgt{} \PYGZsq{}}\PYG{p}{),}
     \PYG{n+nf}{print\PYGZus{}state}\PYG{p}{(}\PYG{n+nv}{STo}\PYG{p}{),} \PYG{l+s+sAtom}{nl}\PYG{p}{.}
\end{MintedVerbatim}
