\begin{MintedVerbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/** \PYGZlt{}module\PYGZgt{} Student Division Strategy: Inverse of Distributive Property (IDP)}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * This module implements a division strategy based on the inverse of the}
\PYG{c+cm}{ * distributive property, modeled as a finite state machine. It solves a}
\PYG{c+cm}{ * division problem (T / S) by using a knowledge base (KB) of known}
\PYG{c+cm}{ * multiplication facts for the divisor S.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * The process is as follows:}
\PYG{c+cm}{ * 1.  Given a knowledge base of facts for S (e.g., 2*S, 5*S, 10*S), find the}
\PYG{c+cm}{ *     largest known multiple of S that is less than or equal to the}
\PYG{c+cm}{ *     remaining total (T).}
\PYG{c+cm}{ * 2.  Subtract this multiple from T.}
\PYG{c+cm}{ * 3.  Add the corresponding factor to a running total for the quotient.}
\PYG{c+cm}{ * 4.  Repeat the process with the new, smaller remainder until no more known}
\PYG{c+cm}{ *     multiples can be subtracted.}
\PYG{c+cm}{ * 5.  The final quotient is the sum of the factors, and the final remainder}
\PYG{c+cm}{ *     is what\PYGZsq{}s left of the total.}
\PYG{c+cm}{ * 6.  The strategy fails if the divisor (S) is not positive.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * The state is represented by the term:}
\PYG{c+cm}{ * `state(Name, Remaining, TotalQuotient, PartialTotal, PartialQuotient, KB, Divisor)`}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * The history of execution is captured as a list of steps:}
\PYG{c+cm}{ * `step(Name, Remainder, TotalQuotient, PartialTotal, PartialQuotient, Interpretation)`}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * }
\PYG{c+cm}{ * }
\PYG{c+cm}{ */}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{module}\PYG{p}{(}\PYG{l+s+sAtom}{smr\PYGZus{}div\PYGZus{}idp}\PYG{p}{,}
          \PYG{p}{[} \PYG{l+s+sAtom}{run\PYGZus{}idp}\PYG{o}{/}\PYG{l+m+mi}{5}\PYG{p}{,}
            \PYG{c+c1}{\PYGZpc{} FSM Engine Interface}
            \PYG{l+s+sAtom}{setup\PYGZus{}strategy}\PYG{o}{/}\PYG{l+m+mi}{5}\PYG{p}{,}
            \PYG{l+s+sAtom}{transition}\PYG{o}{/}\PYG{l+m+mi}{3}\PYG{p}{,}
            \PYG{l+s+sAtom}{transition}\PYG{o}{/}\PYG{l+m+mi}{4}\PYG{p}{,}
            \PYG{l+s+sAtom}{accept\PYGZus{}state}\PYG{o}{/}\PYG{l+m+mi}{1}\PYG{p}{,}
            \PYG{l+s+sAtom}{final\PYGZus{}interpretation}\PYG{o}{/}\PYG{l+m+mi}{2}\PYG{p}{,}
            \PYG{l+s+sAtom}{extract\PYGZus{}result\PYGZus{}from\PYGZus{}history}\PYG{o}{/}\PYG{l+m+mi}{2}
          \PYG{p}{]).}

\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{n+nf}{library}\PYG{p}{(}\PYG{l+s+sAtom}{lists}\PYG{p}{)).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{l+s+sAtom}{fsm\PYGZus{}engine}\PYG{p}{,} \PYG{p}{[}\PYG{l+s+sAtom}{run\PYGZus{}fsm\PYGZus{}with\PYGZus{}base}\PYG{o}{/}\PYG{l+m+mi}{5}\PYG{p}{]).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{l+s+sAtom}{grounded\PYGZus{}arithmetic}\PYG{p}{,} \PYG{p}{[}\PYG{l+s+sAtom}{incur\PYGZus{}cost}\PYG{o}{/}\PYG{l+m+mi}{1}\PYG{p}{]).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{l+s+sAtom}{incompatibility\PYGZus{}semantics}\PYG{p}{,} \PYG{p}{[}\PYG{l+s+sAtom}{s}\PYG{o}{/}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{l+s+sAtom}{comp\PYGZus{}nec}\PYG{o}{/}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{l+s+sAtom}{exp\PYGZus{}poss}\PYG{o}{/}\PYG{l+m+mi}{1}\PYG{p}{]).}

\PYG{c+c1}{\PYGZpc{}!      run\PYGZus{}idp(+T:integer, +S:integer, +KB\PYGZus{}in:list, \PYGZhy{}FinalQuotient:integer, \PYGZhy{}FinalRemainder:integer) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Executes the \PYGZsq{}Inverse of Distributive Property\PYGZsq{} division strategy for T / S.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       This predicate initializes and runs a state machine that models the IDP}
\PYG{c+c1}{\PYGZpc{}       strategy. It first checks for a positive divisor. If valid, it uses the}
\PYG{c+c1}{\PYGZpc{}       provided knowledge base `KB\PYGZus{}in` to repeatedly subtract the largest}
\PYG{c+c1}{\PYGZpc{}       possible known multiple of `S` from `T`, accumulating the quotient.}
\PYG{c+c1}{\PYGZpc{}       It traces the entire execution.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param T The Dividend (Total).}
\PYG{c+c1}{\PYGZpc{}       @param S The Divisor.}
\PYG{c+c1}{\PYGZpc{}       @param KB\PYGZus{}in A list of `Multiple\PYGZhy{}Factor` pairs representing known}
\PYG{c+c1}{\PYGZpc{}       multiplication facts for `S`. Example: `[20\PYGZhy{}2, 50\PYGZhy{}5, 100\PYGZhy{}10]` for S=10.}
\PYG{c+c1}{\PYGZpc{}       @param FinalQuotient The calculated quotient of the division.}
\PYG{c+c1}{\PYGZpc{}       @param FinalRemainder The calculated remainder. If S is not positive,}
\PYG{c+c1}{\PYGZpc{}       this will be `T`.}

\PYG{n+nf}{run\PYGZus{}idp}\PYG{p}{(}\PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{,} \PYG{n+nv}{KB\PYGZus{}in}\PYG{p}{,} \PYG{n+nv}{FinalQuotient}\PYG{p}{,} \PYG{n+nv}{FinalRemainder}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{c+c1}{\PYGZpc{} Check if division is valid first}
    \PYG{p}{(}\PYG{n+nv}{S} \PYG{o}{=\PYGZlt{}} \PYG{l+m+mi}{0} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nv}{FinalQuotient} \PYG{o}{=} \PYG{l+s+sAtom}{\PYGZsq{}error\PYGZsq{}}\PYG{p}{,} \PYG{n+nv}{FinalRemainder} \PYG{o}{=} \PYG{n+nv}{T}
    \PYG{p}{;}
        \PYG{c+c1}{\PYGZpc{} Try to extract learned multiplication facts for divisor S}
        \PYG{n+nf}{extract\PYGZus{}learned\PYGZus{}multiplication\PYGZus{}facts}\PYG{p}{(}\PYG{n+nv}{S}\PYG{p}{,} \PYG{n+nv}{LearnedKB}\PYG{p}{),}
        
        \PYG{c+c1}{\PYGZpc{} If no learned facts available, strategy cannot proceed}
        \PYG{p}{(}\PYG{n+nv}{LearnedKB} \PYG{o}{=} \PYG{p}{[]} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
            \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{atom}\PYG{p}{(}\PYG{n+nv}{Reason}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}No learned multiplication facts for divisor \PYGZti{}w\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{S}\PYG{p}{]),}
            \PYG{n+nv}{FinalQuotient} \PYG{o}{=} \PYG{n+nf}{unavailable}\PYG{p}{(}\PYG{n+nv}{Reason}\PYG{p}{),}
            \PYG{n+nv}{FinalRemainder} \PYG{o}{=} \PYG{n+nv}{T}
        \PYG{p}{;}
            \PYG{c+c1}{\PYGZpc{} Use learned knowledge (not hardcoded facts)}
            \PYG{n+nf}{append}\PYG{p}{(}\PYG{n+nv}{KB\PYGZus{}in}\PYG{p}{,} \PYG{n+nv}{LearnedKB}\PYG{p}{,} \PYG{n+nv}{CombinedKB}\PYG{p}{),}
            
            \PYG{c+c1}{\PYGZpc{} Sort KB descending by multiple (like original)}
            \PYG{n+nf}{keysort}\PYG{p}{(}\PYG{n+nv}{CombinedKB}\PYG{p}{,} \PYG{n+nv}{SortedKB\PYGZus{}asc}\PYG{p}{),}
            \PYG{n+nf}{reverse}\PYG{p}{(}\PYG{n+nv}{SortedKB\PYGZus{}asc}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{),}
            
            \PYG{c+c1}{\PYGZpc{} Use the FSM engine to run this strategy}
            \PYG{n+nf}{setup\PYGZus{}strategy}\PYG{p}{(}\PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{InitialState}\PYG{p}{,} \PYG{n+nv}{Parameters}\PYG{p}{),}
            \PYG{n+nv}{Base} \PYG{o}{=} \PYG{l+m+mi}{10}\PYG{p}{,}
            \PYG{n+nf}{run\PYGZus{}fsm\PYGZus{}with\PYGZus{}base}\PYG{p}{(}\PYG{l+s+sAtom}{smr\PYGZus{}div\PYGZus{}idp}\PYG{p}{,} \PYG{n+nv}{InitialState}\PYG{p}{,} \PYG{n+nv}{Parameters}\PYG{p}{,} \PYG{n+nv}{Base}\PYG{p}{,} \PYG{n+nv}{History}\PYG{p}{),}
            \PYG{n+nf}{extract\PYGZus{}result\PYGZus{}from\PYGZus{}history}\PYG{p}{(}\PYG{n+nv}{History}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{FinalQuotient}\PYG{p}{,} \PYG{n+nv}{FinalRemainder}\PYG{p}{])}
        \PYG{p}{)}
    \PYG{p}{).}

\PYG{c+c1}{\PYGZpc{}!      setup\PYGZus{}strategy(+T, +S, +KB, \PYGZhy{}InitialState, \PYGZhy{}Parameters) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Sets up the initial state for the IDP division strategy.}
\PYG{n+nf}{setup\PYGZus{}strategy}\PYG{p}{(}\PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{InitialState}\PYG{p}{,} \PYG{n+nv}{Parameters}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{c+c1}{\PYGZpc{} Initialize with T as remaining, 0 as total quotient, KB, and S as divisor}
    \PYG{c+c1}{\PYGZpc{} State format: state(StateName, Remaining, TotalQuotient, PartialT, PartialQ, KB, Divisor)}
    \PYG{n+nv}{InitialState} \PYG{o}{=} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}init}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),}
    \PYG{n+nv}{Parameters} \PYG{o}{=} \PYG{p}{[}\PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{],}
    
    \PYG{c+c1}{\PYGZpc{} Emit modal signal for strategy initiation}
    \PYG{n+nf}{s}\PYG{p}{(}\PYG{n+nf}{exp\PYGZus{}poss}\PYG{p}{(}\PYG{l+s+sAtom}{initiating\PYGZus{}inverse\PYGZus{}distributive\PYGZus{}property\PYGZus{}strategy}\PYG{p}{)),}
    \PYG{n+nf}{incur\PYGZus{}cost}\PYG{p}{(}\PYG{l+s+sAtom}{inference}\PYG{p}{).}
\PYG{c+c1}{\PYGZpc{}!      transition(+StateNum, \PYGZhy{}NextStateNum, \PYGZhy{}Action) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       State transitions for IDP division FSM.}

\PYG{n+nf}{transition}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}init}\PYG{p}{,} \PYG{l+s+sAtom}{q\PYGZus{}search\PYGZus{}KB}\PYG{p}{,} \PYG{l+s+sAtom}{search\PYGZus{}knowledge\PYGZus{}base}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{s}\PYG{p}{(}\PYG{n+nf}{comp\PYGZus{}nec}\PYG{p}{(}\PYG{l+s+sAtom}{transitioning\PYGZus{}to\PYGZus{}knowledge\PYGZus{}base\PYGZus{}search}\PYG{p}{)),}
    \PYG{n+nf}{incur\PYGZus{}cost}\PYG{p}{(}\PYG{l+s+sAtom}{state\PYGZus{}change}\PYG{p}{).}

\PYG{n+nf}{transition}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}search\PYGZus{}KB}\PYG{p}{,} \PYG{l+s+sAtom}{q\PYGZus{}apply\PYGZus{}fact}\PYG{p}{,} \PYG{l+s+sAtom}{apply\PYGZus{}found\PYGZus{}fact}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{s}\PYG{p}{(}\PYG{n+nf}{exp\PYGZus{}poss}\PYG{p}{(}\PYG{l+s+sAtom}{applying\PYGZus{}discovered\PYGZus{}multiplication\PYGZus{}fact}\PYG{p}{)),}
    \PYG{n+nf}{incur\PYGZus{}cost}\PYG{p}{(}\PYG{l+s+sAtom}{fact\PYGZus{}application}\PYG{p}{).}

\PYG{n+nf}{transition}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}search\PYGZus{}KB}\PYG{p}{,} \PYG{l+s+sAtom}{q\PYGZus{}accept}\PYG{p}{,} \PYG{l+s+sAtom}{complete\PYGZus{}decomposition}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{s}\PYG{p}{(}\PYG{n+nf}{exp\PYGZus{}poss}\PYG{p}{(}\PYG{l+s+sAtom}{completing\PYGZus{}inverse\PYGZus{}distributive\PYGZus{}decomposition}\PYG{p}{)),}
    \PYG{n+nf}{incur\PYGZus{}cost}\PYG{p}{(}\PYG{l+s+sAtom}{completion}\PYG{p}{).}

\PYG{n+nf}{transition}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}apply\PYGZus{}fact}\PYG{p}{,} \PYG{l+s+sAtom}{q\PYGZus{}search\PYGZus{}KB}\PYG{p}{,} \PYG{l+s+sAtom}{continue\PYGZus{}search}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{s}\PYG{p}{(}\PYG{n+nf}{comp\PYGZus{}nec}\PYG{p}{(}\PYG{l+s+sAtom}{continuing\PYGZus{}iterative\PYGZus{}decomposition}\PYG{p}{)),}
    \PYG{n+nf}{incur\PYGZus{}cost}\PYG{p}{(}\PYG{l+s+sAtom}{iteration}\PYG{p}{).}

\PYG{n+nf}{transition}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}error}\PYG{p}{,} \PYG{l+s+sAtom}{q\PYGZus{}error}\PYG{p}{,} \PYG{l+s+sAtom}{maintain\PYGZus{}error}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{s}\PYG{p}{(}\PYG{n+nf}{comp\PYGZus{}nec}\PYG{p}{(}\PYG{l+s+sAtom}{error\PYGZus{}state\PYGZus{}is\PYGZus{}absorbing}\PYG{p}{)),}
    \PYG{n+nf}{incur\PYGZus{}cost}\PYG{p}{(}\PYG{l+s+sAtom}{error\PYGZus{}handling}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{}!      transition(+State, +Base, \PYGZhy{}NextState, \PYGZhy{}Interpretation) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Complete state transitions with full state tracking.}

\PYG{c+c1}{\PYGZpc{} From q\PYGZus{}init, proceed to search the knowledge base.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}init}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{TQ}\PYG{p}{,} \PYG{n+nv}{PT}\PYG{p}{,} \PYG{n+nv}{PQ}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{k}{\PYGZus{}}\PYG{p}{,}
           \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}search\PYGZus{}KB}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{TQ}\PYG{p}{,} \PYG{n+nv}{PT}\PYG{p}{,} \PYG{n+nv}{PQ}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} 
           \PYG{n+nv}{Interpretation}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{s}\PYG{p}{(}\PYG{n+nf}{exp\PYGZus{}poss}\PYG{p}{(}\PYG{l+s+sAtom}{initializing\PYGZus{}knowledge\PYGZus{}base\PYGZus{}search}\PYG{p}{)),}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{atom}\PYG{p}{(}\PYG{n+nv}{Interpretation}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Initialize: \PYGZti{}w / \PYGZti{}w. Loaded known facts for \PYGZti{}w.\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{]),}
    \PYG{n+nf}{incur\PYGZus{}cost}\PYG{p}{(}\PYG{l+s+sAtom}{initialization}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} In q\PYGZus{}search\PYGZus{}KB, find the best known multiple to subtract.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}search\PYGZus{}KB}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{TQ}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{k}{\PYGZus{}}\PYG{p}{,}
           \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}apply\PYGZus{}fact}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{TQ}\PYG{p}{,} \PYG{n+nv}{Multiple}\PYG{p}{,} \PYG{n+nv}{Factor}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} 
           \PYG{n+nv}{Interpretation}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{find\PYGZus{}best\PYGZus{}fact}\PYG{p}{(}\PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{Multiple}\PYG{p}{,} \PYG{n+nv}{Factor}\PYG{p}{),}
    \PYG{n+nf}{s}\PYG{p}{(}\PYG{n+nf}{exp\PYGZus{}poss}\PYG{p}{(}\PYG{l+s+sAtom}{discovering\PYGZus{}applicable\PYGZus{}multiplication\PYGZus{}fact}\PYG{p}{)),}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{atom}\PYG{p}{(}\PYG{n+nv}{Interpretation}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Found known multiple: \PYGZti{}w (\PYGZti{}w x \PYGZti{}w).\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{Multiple}\PYG{p}{,} \PYG{n+nv}{Factor}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{]),}
    \PYG{n+nf}{incur\PYGZus{}cost}\PYG{p}{(}\PYG{l+s+sAtom}{fact\PYGZus{}discovery}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} If no suitable fact is found, the process is complete.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}search\PYGZus{}KB}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{TQ}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{k}{\PYGZus{}}\PYG{p}{,}
           \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}accept}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{TQ}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} 
           \PYG{l+s+sAtom}{\PYGZsq{}No suitable fact found.\PYGZsq{}}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{l+s+sAtom}{\PYGZbs{}+} \PYG{n+nf}{find\PYGZus{}best\PYGZus{}fact}\PYG{p}{(}\PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{),}
    \PYG{n+nf}{s}\PYG{p}{(}\PYG{n+nf}{exp\PYGZus{}poss}\PYG{p}{(}\PYG{l+s+sAtom}{exhausting\PYGZus{}knowledge\PYGZus{}base\PYGZus{}options}\PYG{p}{)),}
    \PYG{n+nf}{incur\PYGZus{}cost}\PYG{p}{(}\PYG{l+s+sAtom}{exhaustion}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} In q\PYGZus{}apply\PYGZus{}fact, subtract the found multiple and add the factor to the quotient.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}apply\PYGZus{}fact}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{TQ}\PYG{p}{,} \PYG{n+nv}{PT}\PYG{p}{,} \PYG{n+nv}{PQ}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{k}{\PYGZus{}}\PYG{p}{,}
           \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}search\PYGZus{}KB}\PYG{p}{,} \PYG{n+nv}{NewRem}\PYG{p}{,} \PYG{n+nv}{NewTQ}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{KB}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} 
           \PYG{n+nv}{Interpretation}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{s}\PYG{p}{(}\PYG{n+nf}{comp\PYGZus{}nec}\PYG{p}{(}\PYG{l+s+sAtom}{applying\PYGZus{}multiplication\PYGZus{}fact\PYGZus{}decomposition}\PYG{p}{)),}
    \PYG{n+nv}{NewRem} \PYG{o}{is} \PYG{n+nv}{Rem} \PYG{o}{\PYGZhy{}} \PYG{n+nv}{PT}\PYG{p}{,}
    \PYG{n+nv}{NewTQ} \PYG{o}{is} \PYG{n+nv}{TQ} \PYG{o}{+} \PYG{n+nv}{PQ}\PYG{p}{,}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{atom}\PYG{p}{(}\PYG{n+nv}{Interpretation}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Applied fact. Subtracted \PYGZti{}w. Added \PYGZti{}w to Quotient.\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{PT}\PYG{p}{,} \PYG{n+nv}{PQ}\PYG{p}{]),}
    \PYG{n+nf}{incur\PYGZus{}cost}\PYG{p}{(}\PYG{l+s+sAtom}{fact\PYGZus{}application}\PYG{p}{).}

\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}error}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{),} \PYG{k}{\PYGZus{}}\PYG{p}{,}
           \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}error}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{p}{[],} \PYG{l+m+mi}{0}\PYG{p}{),}
           \PYG{l+s+sAtom}{\PYGZsq{}Error: Invalid divisor.\PYGZsq{}}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{s}\PYG{p}{(}\PYG{n+nf}{comp\PYGZus{}nec}\PYG{p}{(}\PYG{l+s+sAtom}{error\PYGZus{}state\PYGZus{}persistence}\PYG{p}{)),}
    \PYG{n+nf}{incur\PYGZus{}cost}\PYG{p}{(}\PYG{l+s+sAtom}{error\PYGZus{}maintenance}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{}!      accept\PYGZus{}state(+State) is semidet.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Defines accepting states for the FSM.}
\PYG{n+nf}{accept\PYGZus{}state}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}accept}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{)).}

\PYG{c+c1}{\PYGZpc{}!      final\PYGZus{}interpretation(+State, \PYGZhy{}Interpretation) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Provides final interpretation of the computation.}
\PYG{n+nf}{final\PYGZus{}interpretation}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}accept}\PYG{p}{,} \PYG{n+nv}{Remainder}\PYG{p}{,} \PYG{n+nv}{Quotient}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{),} \PYG{n+nv}{Interpretation}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{atom}\PYG{p}{(}\PYG{n+nv}{Interpretation}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Successfully computed division: Quotient=\PYGZti{}w, Remainder=\PYGZti{}w via IDP strategy\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{Quotient}\PYG{p}{,} \PYG{n+nv}{Remainder}\PYG{p}{]).}
\PYG{n+nf}{final\PYGZus{}interpretation}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}error}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Error: IDP division failed \PYGZhy{} invalid divisor\PYGZsq{}}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{}!      extract\PYGZus{}result\PYGZus{}from\PYGZus{}history(+History, \PYGZhy{}Result) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Extracts the final result from the execution history.}
\PYG{n+nf}{extract\PYGZus{}result\PYGZus{}from\PYGZus{}history}\PYG{p}{(}\PYG{n+nv}{History}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{Quotient}\PYG{p}{,} \PYG{n+nv}{Remainder}\PYG{p}{])} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{last}\PYG{p}{(}\PYG{n+nv}{History}\PYG{p}{,} \PYG{n+nv}{LastStep}\PYG{p}{),}
    \PYG{p}{(}\PYG{n+nv}{LastStep} \PYG{o}{=} \PYG{n+nf}{step}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}accept}\PYG{p}{,} \PYG{n+nv}{Remainder}\PYG{p}{,} \PYG{n+nv}{Quotient}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{),} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{)} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{l+s+sAtom}{true}
    \PYG{p}{;}
        \PYG{n+nv}{Quotient} \PYG{o}{=} \PYG{l+s+sAtom}{error}\PYG{p}{,}
        \PYG{n+nv}{Remainder} \PYG{o}{=} \PYG{l+s+sAtom}{error}
    \PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} find\PYGZus{}best\PYGZus{}fact/4 is a helper to greedily find the largest applicable known fact.}
\PYG{c+c1}{\PYGZpc{} It assumes KB is sorted in descending order of multiples.}
\PYG{n+nf}{find\PYGZus{}best\PYGZus{}fact}\PYG{p}{([}\PYG{n+nv}{Multiple}\PYG{o}{\PYGZhy{}}\PYG{n+nv}{Factor} \PYG{p}{|} \PYG{k}{\PYGZus{}}\PYG{p}{],} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{Multiple}\PYG{p}{,} \PYG{n+nv}{Factor}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{Multiple} \PYG{o}{=\PYGZlt{}} \PYG{n+nv}{Rem}\PYG{p}{.}
\PYG{n+nf}{find\PYGZus{}best\PYGZus{}fact}\PYG{p}{([}\PYG{k}{\PYGZus{}} \PYG{p}{|} \PYG{n+nv}{Rest}\PYG{p}{],} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{BestMultiple}\PYG{p}{,} \PYG{n+nv}{BestFactor}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{find\PYGZus{}best\PYGZus{}fact}\PYG{p}{(}\PYG{n+nv}{Rest}\PYG{p}{,} \PYG{n+nv}{Rem}\PYG{p}{,} \PYG{n+nv}{BestMultiple}\PYG{p}{,} \PYG{n+nv}{BestFactor}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{}!      extract\PYGZus{}learned\PYGZus{}multiplication\PYGZus{}facts(+Divisor, \PYGZhy{}LearnedKB) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Extracts multiplication facts for Divisor from the learned knowledge system.}
\PYG{c+c1}{\PYGZpc{}       Returns facts in Multiple\PYGZhy{}Factor format that the system has genuinely learned.}
\PYG{n+nf}{extract\PYGZus{}learned\PYGZus{}multiplication\PYGZus{}facts}\PYG{p}{(}\PYG{n+nv}{Divisor}\PYG{p}{,} \PYG{n+nv}{LearnedKB}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{c+c1}{\PYGZpc{} Query the learned knowledge system for multiplication strategies involving Divisor}
    \PYG{n+nf}{findall}\PYG{p}{(}\PYG{n+nv}{Multiple}\PYG{o}{\PYGZhy{}}\PYG{n+nv}{Factor}\PYG{p}{,} 
        \PYG{n+nf}{learned\PYGZus{}multiplication\PYGZus{}fact}\PYG{p}{(}\PYG{n+nv}{Divisor}\PYG{p}{,} \PYG{n+nv}{Factor}\PYG{p}{,} \PYG{n+nv}{Multiple}\PYG{p}{),} 
        \PYG{n+nv}{LearnedKB}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{}!      learned\PYGZus{}multiplication\PYGZus{}fact(+Divisor, \PYGZhy{}Factor, \PYGZhy{}Multiple) is nondet.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Checks if the system has learned a multiplication fact: Divisor * Factor = Multiple}
\PYG{n+nf}{learned\PYGZus{}multiplication\PYGZus{}fact}\PYG{p}{(}\PYG{n+nv}{Divisor}\PYG{p}{,} \PYG{n+nv}{Factor}\PYG{p}{,} \PYG{n+nv}{Multiple}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{c+c1}{\PYGZpc{} Check if there\PYGZsq{}s a learned strategy that demonstrates this multiplication}
    \PYG{c+c1}{\PYGZpc{} Look for strategies that use this specific multiplication relationship}
    \PYG{p}{(}   \PYG{c+c1}{\PYGZpc{} Check if learned knowledge contains this multiplication fact}
        \PYG{n+nf}{catch}\PYG{p}{((}
            \PYG{n+nf}{consult}\PYG{p}{(}\PYG{l+s+sAtom}{learned\PYGZus{}knowledge}\PYG{p}{),}
            \PYG{n+nf}{run\PYGZus{}learned\PYGZus{}strategy}\PYG{p}{(}\PYG{n+nv}{Divisor}\PYG{p}{,} \PYG{n+nv}{Factor}\PYG{p}{,} \PYG{n+nv}{Multiple}\PYG{p}{,} \PYG{l+s+sAtom}{multiplication}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{)}
        \PYG{p}{),} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{fail}\PYG{p}{)}
    \PYG{p}{;}   \PYG{c+c1}{\PYGZpc{} Or check if we can derive it from learned addition patterns}
        \PYG{n+nf}{catch}\PYG{p}{((}
            \PYG{n+nf}{consult}\PYG{p}{(}\PYG{l+s+sAtom}{learned\PYGZus{}knowledge}\PYG{p}{),}
            \PYG{n+nf}{run\PYGZus{}learned\PYGZus{}strategy}\PYG{p}{(}\PYG{n+nv}{Partial}\PYG{p}{,} \PYG{n+nv}{Partial}\PYG{p}{,} \PYG{n+nv}{Multiple}\PYG{p}{,} \PYG{l+s+sAtom}{doubles}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{),}
            \PYG{n+nv}{Factor} \PYG{o}{=} \PYG{l+m+mi}{2}\PYG{p}{,}
            \PYG{n+nv}{Partial} \PYG{o}{is} \PYG{n+nv}{Divisor} \PYG{o}{*} \PYG{n+nv}{Factor}\PYG{p}{,}
            \PYG{n+nv}{Multiple} \PYG{o}{=} \PYG{n+nv}{Partial}
        \PYG{p}{),} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{fail}\PYG{p}{)}
    \PYG{p}{;}   \PYG{c+c1}{\PYGZpc{} For now, no learned multiplication facts available}
        \PYG{l+s+sAtom}{fail}
    \PYG{p}{).}
\end{MintedVerbatim}
