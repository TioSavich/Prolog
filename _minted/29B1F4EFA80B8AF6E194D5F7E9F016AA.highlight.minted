\begin{MintedVerbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/** \PYGZlt{}module\PYGZgt{} Student Multiplication Strategy: Coordinating Two Counts (C2C)}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * This module implements a foundational multiplication strategy, \PYGZdq{}Coordinating}
\PYG{c+cm}{ * Two Counts\PYGZdq{} (C2C), modeled as a finite state machine. This strategy}
\PYG{c+cm}{ * represents a direct modeling approach where a student literally counts every}
\PYG{c+cm}{ * single item across all groups.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * The cognitive process involves two simultaneous counting acts:}
\PYG{c+cm}{ * 1.  Tracking the number of items counted within the current group.}
\PYG{c+cm}{ * 2.  Tracking which group is currently being counted.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * This is a direct simulation of `N * S` where the total is found by}
\PYG{c+cm}{ * counting `1` for each item, `S` times for each of the `N` groups.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * The state is represented by the term:}
\PYG{c+cm}{ * `state(Name, GroupsDone, ItemInGroup, Total, NumGroups, GroupSize)`}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * The history of execution is captured as a list of steps:}
\PYG{c+cm}{ * `step(Name, GroupsDone, ItemInGroup, Total, Interpretation)`}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * }
\PYG{c+cm}{ * }
\PYG{c+cm}{ */}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{module}\PYG{p}{(}\PYG{l+s+sAtom}{smr\PYGZus{}mult\PYGZus{}c2c}\PYG{p}{,}
          \PYG{p}{[} \PYG{l+s+sAtom}{run\PYGZus{}c2c}\PYG{o}{/}\PYG{l+m+mi}{4}
          \PYG{p}{]).}

\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{n+nf}{library}\PYG{p}{(}\PYG{l+s+sAtom}{lists}\PYG{p}{)).}

\PYG{c+c1}{\PYGZpc{}!      run\PYGZus{}c2c(+N:integer, +S:integer, \PYGZhy{}FinalTotal:integer, \PYGZhy{}History:list) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Executes the \PYGZsq{}Coordinating Two Counts\PYGZsq{} multiplication strategy for N * S.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       This predicate initializes and runs a state machine that models the}
\PYG{c+c1}{\PYGZpc{}       C2C strategy. It simulates a student counting every item, one by one,}
\PYG{c+c1}{\PYGZpc{}       across all `N` groups of size `S`. It traces the entire execution,}
\PYG{c+c1}{\PYGZpc{}       providing a step\PYGZhy{}by\PYGZhy{}step history of the two coordinated counts.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param N The number of groups.}
\PYG{c+c1}{\PYGZpc{}       @param S The size of each group (number of items).}
\PYG{c+c1}{\PYGZpc{}       @param FinalTotal The resulting product of N * S.}
\PYG{c+c1}{\PYGZpc{}       @param History A list of `step/5` terms that describe the state}
\PYG{c+c1}{\PYGZpc{}       machine\PYGZsq{}s execution path and the interpretation of each step.}

\PYG{n+nf}{run\PYGZus{}c2c}\PYG{p}{(}\PYG{n+nv}{N}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{,} \PYG{n+nv}{FinalTotal}\PYG{p}{,} \PYG{n+nv}{History}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{InitialState} \PYG{o}{=} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}init}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{N}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),}

    \PYG{n+nf}{run}\PYG{p}{(}\PYG{n+nv}{InitialState}\PYG{p}{,} \PYG{p}{[],} \PYG{n+nv}{ReversedHistory}\PYG{p}{),}
    \PYG{n+nf}{reverse}\PYG{p}{(}\PYG{n+nv}{ReversedHistory}\PYG{p}{,} \PYG{n+nv}{History}\PYG{p}{),}

    \PYG{p}{(}\PYG{n+nf}{last}\PYG{p}{(}\PYG{n+nv}{History}\PYG{p}{,} \PYG{n+nf}{step}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}accept}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{n+nv}{FinalTotal}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{))} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}} \PYG{l+s+sAtom}{true} \PYG{p}{;} \PYG{n+nv}{FinalTotal} \PYG{o}{=} \PYG{l+s+sAtom}{\PYGZsq{}error\PYGZsq{}}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} run/3 is the main recursive loop of the state machine.}
\PYG{n+nf}{run}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}accept}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{),} \PYG{n+nv}{Acc}\PYG{p}{,} \PYG{n+nv}{FinalHistory}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{string}\PYG{p}{(}\PYG{n+nv}{Interpretation}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}All groups counted. Result = \PYGZti{}w.\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{T}\PYG{p}{]),}
    \PYG{n+nv}{HistoryEntry} \PYG{o}{=} \PYG{n+nf}{step}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}accept}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{Interpretation}\PYG{p}{),}
    \PYG{n+nv}{FinalHistory} \PYG{o}{=} \PYG{p}{[}\PYG{n+nv}{HistoryEntry} \PYG{p}{|} \PYG{n+nv}{Acc}\PYG{p}{].}

\PYG{n+nf}{run}\PYG{p}{(}\PYG{n+nv}{CurrentState}\PYG{p}{,} \PYG{n+nv}{Acc}\PYG{p}{,} \PYG{n+nv}{FinalHistory}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nv}{CurrentState}\PYG{p}{,} \PYG{n+nv}{NextState}\PYG{p}{,} \PYG{n+nv}{Interpretation}\PYG{p}{),}
    \PYG{n+nv}{CurrentState} \PYG{o}{=} \PYG{n+nf}{state}\PYG{p}{(}\PYG{n+nv}{Name}\PYG{p}{,} \PYG{n+nv}{G}\PYG{p}{,} \PYG{n+nv}{I}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{),}
    \PYG{n+nv}{HistoryEntry} \PYG{o}{=} \PYG{n+nf}{step}\PYG{p}{(}\PYG{n+nv}{Name}\PYG{p}{,} \PYG{n+nv}{G}\PYG{p}{,} \PYG{n+nv}{I}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{Interpretation}\PYG{p}{),}
    \PYG{n+nf}{run}\PYG{p}{(}\PYG{n+nv}{NextState}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{HistoryEntry} \PYG{p}{|} \PYG{n+nv}{Acc}\PYG{p}{],} \PYG{n+nv}{FinalHistory}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} transition/3 defines the logic for moving from one state to the next.}

\PYG{c+c1}{\PYGZpc{} From q\PYGZus{}init, proceed to check the group counter.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}init}\PYG{p}{,} \PYG{n+nv}{G}\PYG{p}{,} \PYG{n+nv}{I}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{N}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}check\PYGZus{}G}\PYG{p}{,} \PYG{n+nv}{G}\PYG{p}{,} \PYG{n+nv}{I}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{N}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{n+nv}{Interp}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{string}\PYG{p}{(}\PYG{n+nv}{Interp}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Inputs: \PYGZti{}w groups of \PYGZti{}w. Initialize counters.\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{N}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{]).}

\PYG{c+c1}{\PYGZpc{} In q\PYGZus{}check\PYGZus{}G, decide whether to count another group or finish.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}check\PYGZus{}G}\PYG{p}{,} \PYG{n+nv}{G}\PYG{p}{,} \PYG{n+nv}{I}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{N}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}count\PYGZus{}items}\PYG{p}{,} \PYG{n+nv}{G}\PYG{p}{,} \PYG{n+nv}{I}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{N}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{n+nv}{Interp}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{G} \PYG{o}{\PYGZlt{}} \PYG{n+nv}{N}\PYG{p}{,}
    \PYG{n+nv}{G1} \PYG{o}{is} \PYG{n+nv}{G} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{,}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{string}\PYG{p}{(}\PYG{n+nv}{Interp}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}G \PYGZlt{} N. Starting Group \PYGZti{}w.\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{G1}\PYG{p}{]).}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}check\PYGZus{}G}\PYG{p}{,} \PYG{n+nv}{N}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{N}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}accept}\PYG{p}{,} \PYG{n+nv}{N}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{N}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}G = N. All groups counted.\PYGZsq{}}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} In q\PYGZus{}count\PYGZus{}items, count one item and increment the total. Loop until the group is full.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}count\PYGZus{}items}\PYG{p}{,} \PYG{n+nv}{G}\PYG{p}{,} \PYG{n+nv}{I}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{N}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}count\PYGZus{}items}\PYG{p}{,} \PYG{n+nv}{G}\PYG{p}{,} \PYG{n+nv}{NewI}\PYG{p}{,} \PYG{n+nv}{NewT}\PYG{p}{,} \PYG{n+nv}{N}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{n+nv}{Interp}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{I} \PYG{o}{\PYGZlt{}} \PYG{n+nv}{S}\PYG{p}{,}
    \PYG{n+nv}{NewI} \PYG{o}{is} \PYG{n+nv}{I} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{,}
    \PYG{n+nv}{NewT} \PYG{o}{is} \PYG{n+nv}{T} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{,}
    \PYG{n+nv}{G1} \PYG{o}{is} \PYG{n+nv}{G} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{,}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{string}\PYG{p}{(}\PYG{n+nv}{Interp}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Count: \PYGZti{}w. (Item \PYGZti{}w in Group \PYGZti{}w).\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{NewT}\PYG{p}{,} \PYG{n+nv}{NewI}\PYG{p}{,} \PYG{n+nv}{G1}\PYG{p}{]).}
\PYG{c+c1}{\PYGZpc{} When the current group is fully counted, move to the next group.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}count\PYGZus{}items}\PYG{p}{,} \PYG{n+nv}{G}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{N}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}next\PYGZus{}group}\PYG{p}{,} \PYG{n+nv}{G}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{N}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{n+nv}{Interp}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{G1} \PYG{o}{is} \PYG{n+nv}{G} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{,}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{string}\PYG{p}{(}\PYG{n+nv}{Interp}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Group \PYGZti{}w finished.\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{G1}\PYG{p}{]).}

\PYG{c+c1}{\PYGZpc{} In q\PYGZus{}next\PYGZus{}group, increment the group counter and reset the item counter, then loop back.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}next\PYGZus{}group}\PYG{p}{,} \PYG{n+nv}{G}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{N}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}check\PYGZus{}G}\PYG{p}{,} \PYG{n+nv}{NewG}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{T}\PYG{p}{,} \PYG{n+nv}{N}\PYG{p}{,} \PYG{n+nv}{S}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Increment G. Reset I.\PYGZsq{}}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{NewG} \PYG{o}{is} \PYG{n+nv}{G} \PYG{o}{+} \PYG{l+m+mf}{1.}
\end{MintedVerbatim}
