\begin{MintedVerbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/** \PYGZlt{}module\PYGZgt{} Basic Test HTTP Server}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * This module provides a minimal HTTP server with a single endpoint (`/test`).}
\PYG{c+cm}{ * Its purpose is to serve as a basic test to confirm that the SWI\PYGZhy{}Prolog}
\PYG{c+cm}{ * HTTP libraries are working correctly and that a server can be started.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * It is not part of the main application logic but can be useful for}
\PYG{c+cm}{ * debugging or initial environment setup verification.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * }
\PYG{c+cm}{ * }
\PYG{c+cm}{ */}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{n+nf}{library}\PYG{p}{(}\PYG{l+s+sAtom}{http}\PYG{o}{/}\PYG{l+s+sAtom}{thread\PYGZus{}httpd}\PYG{p}{)).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{n+nf}{library}\PYG{p}{(}\PYG{l+s+sAtom}{http}\PYG{o}{/}\PYG{l+s+sAtom}{http\PYGZus{}dispatch}\PYG{p}{)).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{n+nf}{library}\PYG{p}{(}\PYG{l+s+sAtom}{http}\PYG{o}{/}\PYG{l+s+sAtom}{http\PYGZus{}json}\PYG{p}{)).}

\PYG{c+c1}{\PYGZpc{} Define a simple test endpoint}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{http\PYGZus{}handler}\PYG{p}{(}\PYG{n+nf}{root}\PYG{p}{(}\PYG{l+s+sAtom}{test}\PYG{p}{),} \PYG{l+s+sAtom}{test\PYGZus{}handler}\PYG{p}{,} \PYG{p}{[}\PYG{n+nf}{method}\PYG{p}{(}\PYG{l+s+sAtom}{get}\PYG{p}{)]).}

\PYG{c+c1}{\PYGZpc{}!      server(+Port:integer) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Starts the HTTP server on the specified Port.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param Port The port number for the server to listen on.}
\PYG{n+nf}{server}\PYG{p}{(}\PYG{n+nv}{Port}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{http\PYGZus{}server}\PYG{p}{(}\PYG{l+s+sAtom}{http\PYGZus{}dispatch}\PYG{p}{,} \PYG{p}{[}\PYG{n+nf}{port}\PYG{p}{(}\PYG{n+nv}{Port}\PYG{p}{)]).}

\PYG{c+c1}{\PYGZpc{}!      test\PYGZus{}handler(+Request:list) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Handles GET requests to the `/test` endpoint.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       It responds with a simple, fixed JSON object `\PYGZus{}\PYGZob{}message: \PYGZdq{}Hello from Prolog!\PYGZdq{}\PYGZcb{}`}
\PYG{c+c1}{\PYGZpc{}       to confirm that the server is running and able to handle requests.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param \PYGZus{}Request The incoming HTTP request (unused).}
\PYG{n+nf}{test\PYGZus{}handler}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{n+nv}{Request}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{reply\PYGZus{}json\PYGZus{}dict}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{p}{\PYGZob{}}\PYG{n+nn}{message}\PYG{p}{:} \PYG{l+s+s2}{\PYGZdq{}Hello from Prolog!\PYGZdq{}}\PYG{p}{\PYGZcb{}).}

\PYG{c+c1}{\PYGZpc{} To run the server from the command line:}
\PYG{c+c1}{\PYGZpc{} swipl \PYGZhy{}g \PYGZdq{}server(8082)\PYGZdq{} test\PYGZus{}server.pl}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{initialization}\PYG{p}{(}\PYG{n+nf}{server}\PYG{p}{(}\PYG{l+m+mi}{8082}\PYG{p}{),} \PYG{l+s+sAtom}{main}\PYG{p}{).}
\end{MintedVerbatim}
