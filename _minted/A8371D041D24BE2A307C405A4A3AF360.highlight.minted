\begin{MintedVerbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/** \PYGZlt{}module\PYGZgt{} Student Addition Strategy: Rearranging to Make Bases (RMB)}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * This module implements the \PYGZsq{}Rearranging to Make Bases\PYGZsq{} (RMB) strategy for}
\PYG{c+cm}{ * addition, modeled as a finite state machine. This is a sophisticated}
\PYG{c+cm}{ * strategy where a student rearranges quantities between the two addends}
\PYG{c+cm}{ * to create a \PYGZdq{}friendly\PYGZdq{} number (a multiple of 10), simplifying the final calculation.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * The process is as follows:}
\PYG{c+cm}{ * 1. Identify the larger number (A) and the smaller number (B).}
\PYG{c+cm}{ * 2. Calculate how much A needs to reach the next multiple of 10. This amount is K.}
\PYG{c+cm}{ * 3. \PYGZdq{}Take\PYGZdq{} K from B and \PYGZdq{}give\PYGZdq{} it to A. This is a decomposition and recombination step.}
\PYG{c+cm}{ * 4. The new problem becomes (A + K) + (B \PYGZhy{} K).}
\PYG{c+cm}{ * 5. The strategy fails if B is smaller than K.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * The state is represented by the term:}
\PYG{c+cm}{ * `state(Name, A, B, K, A\PYGZus{}temp, B\PYGZus{}temp, TargetBase, B\PYGZus{}initial)`}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * The history of execution is captured as a list of steps:}
\PYG{c+cm}{ * `step(Name, A, B, K, A\PYGZus{}temp, B\PYGZus{}temp, Interpretation)`}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * }
\PYG{c+cm}{ * }
\PYG{c+cm}{ */}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{module}\PYG{p}{(}\PYG{l+s+sAtom}{sar\PYGZus{}add\PYGZus{}rmb}\PYG{p}{,}
          \PYG{p}{[} \PYG{l+s+sAtom}{run\PYGZus{}rmb}\PYG{o}{/}\PYG{l+m+mi}{4}
          \PYG{p}{]).}

\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{n+nf}{library}\PYG{p}{(}\PYG{l+s+sAtom}{lists}\PYG{p}{)).}

\PYG{c+c1}{\PYGZpc{}!      run\PYGZus{}rmb(+A\PYGZus{}in:integer, +B\PYGZus{}in:integer, \PYGZhy{}FinalResult:integer, \PYGZhy{}History:list) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Executes the \PYGZsq{}Rearranging to Make Bases\PYGZsq{} (RMB) addition strategy for A + B.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       This predicate initializes and runs a state machine that models the RMB}
\PYG{c+c1}{\PYGZpc{}       strategy. It first determines the amount `K` needed for the larger number}
\PYG{c+c1}{\PYGZpc{}       to reach a multiple of 10, then transfers `K` from the smaller number.}
\PYG{c+c1}{\PYGZpc{}       It traces the execution, providing a step\PYGZhy{}by\PYGZhy{}step history.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param A\PYGZus{}in The first addend.}
\PYG{c+c1}{\PYGZpc{}       @param B\PYGZus{}in The second addend.}
\PYG{c+c1}{\PYGZpc{}       @param FinalResult The resulting sum of A and B. If the strategy}
\PYG{c+c1}{\PYGZpc{}       fails (because the smaller addend is less than K), this will be the}
\PYG{c+c1}{\PYGZpc{}       atom `\PYGZsq{}error\PYGZsq{}`.}
\PYG{c+c1}{\PYGZpc{}       @param History A list of `step/7` terms that describe the state}
\PYG{c+c1}{\PYGZpc{}       machine\PYGZsq{}s execution path and the interpretation of each step.}

\PYG{n+nf}{run\PYGZus{}rmb}\PYG{p}{(}\PYG{n+nv}{A\PYGZus{}in}\PYG{p}{,} \PYG{n+nv}{B\PYGZus{}in}\PYG{p}{,} \PYG{n+nv}{FinalResult}\PYG{p}{,} \PYG{n+nv}{History}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{Base} \PYG{o}{=} \PYG{l+m+mi}{10}\PYG{p}{,}
    \PYG{c+c1}{\PYGZpc{} Ensure A is the larger number and B is the smaller.}
    \PYG{n+nv}{A} \PYG{o}{is} \PYG{n+nf}{max}\PYG{p}{(}\PYG{n+nv}{A\PYGZus{}in}\PYG{p}{,} \PYG{n+nv}{B\PYGZus{}in}\PYG{p}{),}
    \PYG{n+nv}{B} \PYG{o}{is} \PYG{n+nf}{min}\PYG{p}{(}\PYG{n+nv}{A\PYGZus{}in}\PYG{p}{,} \PYG{n+nv}{B\PYGZus{}in}\PYG{p}{),}

    \PYG{c+c1}{\PYGZpc{} Initial state (q\PYGZus{}calc\PYGZus{}K): Determine K needed to get A to a multiple of 10.}
    \PYG{p}{(}\PYG{n+nv}{A} \PYG{o}{mod} \PYG{n+nv}{Base} \PYG{o}{=:=} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{A} \PYG{l+s+sAtom}{=\PYGZbs{}=} \PYG{l+m+mi}{0} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}} \PYG{n+nv}{TargetBase} \PYG{o}{is} \PYG{n+nv}{A} \PYG{p}{;} \PYG{n+nv}{TargetBase} \PYG{o}{is} \PYG{p}{((}\PYG{n+nv}{A} \PYG{o}{//} \PYG{n+nv}{Base}\PYG{p}{)} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{)} \PYG{o}{*} \PYG{n+nv}{Base}\PYG{p}{),}
    \PYG{n+nv}{InitialState} \PYG{o}{=} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}calc\PYGZus{}K}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{TargetBase}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{),} \PYG{c+c1}{\PYGZpc{} B\PYGZus{}initial stored for error msg}

    \PYG{n+nv}{InitialInterpretation} \PYG{o}{=} \PYG{l+s+sAtom}{\PYGZsq{}Start. Determine larger number and target base.\PYGZsq{}}\PYG{p}{,}
    \PYG{n+nv}{InitialHistoryEntry} \PYG{o}{=} \PYG{n+nf}{step}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}start}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{InitialInterpretation}\PYG{p}{),}

    \PYG{n+nf}{run}\PYG{p}{(}\PYG{n+nv}{InitialState}\PYG{p}{,} \PYG{n+nv}{Base}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{InitialHistoryEntry}\PYG{p}{],} \PYG{n+nv}{ReversedHistory}\PYG{p}{),}
    \PYG{n+nf}{reverse}\PYG{p}{(}\PYG{n+nv}{ReversedHistory}\PYG{p}{,} \PYG{n+nv}{History}\PYG{p}{),}

    \PYG{c+c1}{\PYGZpc{} Check the final state to determine the result.}
    \PYG{p}{(}\PYG{n+nf}{last}\PYG{p}{(}\PYG{n+nv}{History}\PYG{p}{,} \PYG{n+nf}{step}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}accept}\PYG{p}{,} \PYG{n+nv}{FinalA}\PYG{p}{,} \PYG{n+nv}{FinalB}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{))} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nv}{FinalResult} \PYG{o}{is} \PYG{n+nv}{FinalA} \PYG{o}{+} \PYG{n+nv}{FinalB}
    \PYG{p}{;}
        \PYG{n+nv}{FinalResult} \PYG{o}{=} \PYG{l+s+sAtom}{\PYGZsq{}error\PYGZsq{}}
    \PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} run/4 is the main recursive loop of the state machine.}

\PYG{c+c1}{\PYGZpc{} Base case: Stop when the machine reaches the \PYGZsq{}q\PYGZus{}accept\PYGZsq{} state.}
\PYG{n+nf}{run}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}accept}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{n+nv}{K}\PYG{p}{,} \PYG{n+nv}{AT}\PYG{p}{,} \PYG{n+nv}{BT}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{),} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{n+nv}{Acc}\PYG{p}{,} \PYG{n+nv}{FinalHistory}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{Result} \PYG{o}{is} \PYG{n+nv}{A} \PYG{o}{+} \PYG{n+nv}{B}\PYG{p}{,}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{string}\PYG{p}{(}\PYG{n+nv}{Interpretation}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Combine rearranged numbers: \PYGZti{}w + \PYGZti{}w = \PYGZti{}w.\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{n+nv}{Result}\PYG{p}{]),}
    \PYG{n+nv}{HistoryEntry} \PYG{o}{=} \PYG{n+nf}{step}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}accept}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{n+nv}{K}\PYG{p}{,} \PYG{n+nv}{AT}\PYG{p}{,} \PYG{n+nv}{BT}\PYG{p}{,} \PYG{n+nv}{Interpretation}\PYG{p}{),}
    \PYG{n+nv}{FinalHistory} \PYG{o}{=} \PYG{p}{[}\PYG{n+nv}{HistoryEntry} \PYG{p}{|} \PYG{n+nv}{Acc}\PYG{p}{].}

\PYG{c+c1}{\PYGZpc{} Recursive step: Perform one transition and continue.}
\PYG{n+nf}{run}\PYG{p}{(}\PYG{n+nv}{CurrentState}\PYG{p}{,} \PYG{n+nv}{Base}\PYG{p}{,} \PYG{n+nv}{Acc}\PYG{p}{,} \PYG{n+nv}{FinalHistory}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nv}{CurrentState}\PYG{p}{,} \PYG{n+nv}{Base}\PYG{p}{,} \PYG{n+nv}{NextState}\PYG{p}{,} \PYG{n+nv}{Interpretation}\PYG{p}{),}
    \PYG{n+nv}{CurrentState} \PYG{o}{=} \PYG{n+nf}{state}\PYG{p}{(}\PYG{n+nv}{Name}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{n+nv}{K}\PYG{p}{,} \PYG{n+nv}{AT}\PYG{p}{,} \PYG{n+nv}{BT}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{),}
    \PYG{n+nv}{HistoryEntry} \PYG{o}{=} \PYG{n+nf}{step}\PYG{p}{(}\PYG{n+nv}{Name}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{n+nv}{K}\PYG{p}{,} \PYG{n+nv}{AT}\PYG{p}{,} \PYG{n+nv}{BT}\PYG{p}{,} \PYG{n+nv}{Interpretation}\PYG{p}{),}
    \PYG{n+nf}{run}\PYG{p}{(}\PYG{n+nv}{NextState}\PYG{p}{,} \PYG{n+nv}{Base}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{HistoryEntry} \PYG{p}{|} \PYG{n+nv}{Acc}\PYG{p}{],} \PYG{n+nv}{FinalHistory}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} transition/4 defines the logic for moving from one state to the next.}

\PYG{c+c1}{\PYGZpc{} In q\PYGZus{}calc\PYGZus{}K, count up from A to the target base to determine K.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}calc\PYGZus{}K}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{n+nv}{K}\PYG{p}{,} \PYG{n+nv}{AT}\PYG{p}{,} \PYG{n+nv}{BT}\PYG{p}{,} \PYG{n+nv}{TB}\PYG{p}{,} \PYG{n+nv}{B\PYGZus{}init}\PYG{p}{),} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}calc\PYGZus{}K}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{n+nv}{NewK}\PYG{p}{,} \PYG{n+nv}{NewAT}\PYG{p}{,} \PYG{n+nv}{BT}\PYG{p}{,} \PYG{n+nv}{TB}\PYG{p}{,} \PYG{n+nv}{B\PYGZus{}init}\PYG{p}{),} \PYG{n+nv}{Interpretation}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{AT} \PYG{o}{\PYGZlt{}} \PYG{n+nv}{TB}\PYG{p}{,}
    \PYG{n+nv}{NewAT} \PYG{o}{is} \PYG{n+nv}{AT} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{,}
    \PYG{n+nv}{NewK} \PYG{o}{is} \PYG{n+nv}{K} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{,}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{string}\PYG{p}{(}\PYG{n+nv}{Interpretation}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Count up: \PYGZti{}w. Distance (K): \PYGZti{}w.\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{NewAT}\PYG{p}{,} \PYG{n+nv}{NewK}\PYG{p}{]).}
\PYG{c+c1}{\PYGZpc{} Once K is found, transition to q\PYGZus{}decompose\PYGZus{}B to transfer K from B.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}calc\PYGZus{}K}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{n+nv}{K}\PYG{p}{,} \PYG{n+nv}{AT}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{n+nv}{BT}\PYG{p}{,} \PYG{n+nv}{TB}\PYG{p}{,} \PYG{n+nv}{B\PYGZus{}init}\PYG{p}{),} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}decompose\PYGZus{}B}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{n+nv}{K}\PYG{p}{,} \PYG{n+nv}{AT}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{n+nv}{TB}\PYG{p}{,} \PYG{n+nv}{B\PYGZus{}init}\PYG{p}{),} \PYG{n+nv}{Interpretation}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{AT} \PYG{o}{\PYGZgt{}=} \PYG{n+nv}{TB}\PYG{p}{,}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{string}\PYG{p}{(}\PYG{n+nv}{Interpretation}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}K needed is \PYGZti{}w. Start counting down K from B.\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{K}\PYG{p}{]).}

\PYG{c+c1}{\PYGZpc{} In q\PYGZus{}decompose\PYGZus{}B, \PYGZdq{}transfer\PYGZdq{} K from B to A by decrementing both K and a temp copy of B.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}decompose\PYGZus{}B}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{n+nv}{K}\PYG{p}{,} \PYG{n+nv}{AT}\PYG{p}{,} \PYG{n+nv}{BT}\PYG{p}{,} \PYG{n+nv}{TB}\PYG{p}{,} \PYG{n+nv}{B\PYGZus{}init}\PYG{p}{),} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}decompose\PYGZus{}B}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{n+nv}{NewK}\PYG{p}{,} \PYG{n+nv}{AT}\PYG{p}{,} \PYG{n+nv}{NewBT}\PYG{p}{,} \PYG{n+nv}{TB}\PYG{p}{,} \PYG{n+nv}{B\PYGZus{}init}\PYG{p}{),} \PYG{n+nv}{Interpretation}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{K} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{BT} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}\PYG{p}{,}
    \PYG{n+nv}{NewK} \PYG{o}{is} \PYG{n+nv}{K} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}\PYG{p}{,}
    \PYG{n+nv}{NewBT} \PYG{o}{is} \PYG{n+nv}{BT} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}\PYG{p}{,}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{string}\PYG{p}{(}\PYG{n+nv}{Interpretation}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Transferred 1. B remainder: \PYGZti{}w. K remaining: \PYGZti{}w.\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{NewBT}\PYG{p}{,} \PYG{n+nv}{NewK}\PYG{p}{]).}
\PYG{c+c1}{\PYGZpc{} Once K is fully transferred (K=0), recombine the numbers.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}decompose\PYGZus{}B}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{AT}\PYG{p}{,} \PYG{n+nv}{BT}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{),} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}recombine}\PYG{p}{,} \PYG{n+nv}{AT}\PYG{p}{,} \PYG{n+nv}{BT}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nv}{AT}\PYG{p}{,} \PYG{n+nv}{BT}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{),} \PYG{n+nv}{Interpretation}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{string}\PYG{p}{(}\PYG{n+nv}{Interpretation}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Decomposition Complete. New state: A=\PYGZti{}w, B=\PYGZti{}w.\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{AT}\PYG{p}{,} \PYG{n+nv}{BT}\PYG{p}{]).}
\PYG{c+c1}{\PYGZpc{} If B runs out before K is transferred, the strategy fails.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}decompose\PYGZus{}B}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{n+nv}{K}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{n+nv}{B\PYGZus{}init}\PYG{p}{),} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}error}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{),} \PYG{n+nv}{Interpretation}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{K} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}\PYG{p}{,}
    \PYG{n+nf}{format}\PYG{p}{(}\PYG{n+nf}{string}\PYG{p}{(}\PYG{n+nv}{Interpretation}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Strategy Failed. B (\PYGZti{}w) is too small to provide K (\PYGZti{}w).\PYGZsq{}}\PYG{p}{,} \PYG{p}{[}\PYG{n+nv}{B\PYGZus{}init}\PYG{p}{,} \PYG{n+nv}{K}\PYG{p}{]).}

\PYG{c+c1}{\PYGZpc{} From q\PYGZus{}recombine, proceed to the final accept state.}
\PYG{n+nf}{transition}\PYG{p}{(}\PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}recombine}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{n+nv}{K}\PYG{p}{,} \PYG{n+nv}{AT}\PYG{p}{,} \PYG{n+nv}{BT}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{),} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{n+nf}{state}\PYG{p}{(}\PYG{l+s+sAtom}{q\PYGZus{}accept}\PYG{p}{,} \PYG{n+nv}{A}\PYG{p}{,} \PYG{n+nv}{B}\PYG{p}{,} \PYG{n+nv}{K}\PYG{p}{,} \PYG{n+nv}{AT}\PYG{p}{,} \PYG{n+nv}{BT}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{),} \PYG{l+s+sAtom}{\PYGZsq{}Proceed to accept.\PYGZsq{}}\PYG{p}{).}
\end{MintedVerbatim}
