\begin{MintedVerbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/** \PYGZlt{}module\PYGZgt{} Normalization Engine for Grounded Fractional Arithmetic}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * This module implements the normalization engine that repeatedly applies}
\PYG{c+cm}{ * equivalence rules until quantities are fully simplified. It provides the}
\PYG{c+cm}{ * cognitive process of iterative simplification in fractional reasoning.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * The normalization process continues until no more equivalence rules can}
\PYG{c+cm}{ * be applied, resulting in a canonical representation of the quantity.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * @author FSM Engine System}
\PYG{c+cm}{ * @license MIT}
\PYG{c+cm}{ */}

\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{module}\PYG{p}{(}\PYG{l+s+sAtom}{normalization}\PYG{p}{,} \PYG{p}{[}
    \PYG{l+s+sAtom}{normalize}\PYG{o}{/}\PYG{l+m+mi}{2}
\PYG{p}{]).}

\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{l+s+sAtom}{fraction\PYGZus{}semantics}\PYG{p}{,} \PYG{p}{[}\PYG{l+s+sAtom}{apply\PYGZus{}equivalence\PYGZus{}rule}\PYG{o}{/}\PYG{l+m+mi}{3}\PYG{p}{]).}

\PYG{c+c1}{\PYGZpc{}! normalize(+QtyIn, \PYGZhy{}QtyOut) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{} Normalizes a quantity by repeatedly applying equivalence rules until}
\PYG{c+c1}{\PYGZpc{} no more rules can be applied. This implements the cognitive process}
\PYG{c+c1}{\PYGZpc{} of iterative simplification.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{} @param QtyIn Input quantity (list of units)}
\PYG{c+c1}{\PYGZpc{} @param QtyOut Normalized output quantity in canonical form}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{} The normalization process applies rules in the following priority:}
\PYG{c+c1}{\PYGZpc{} 1. Grouping rules (reconstitution of wholes from parts)}
\PYG{c+c1}{\PYGZpc{} 2. Composition rules (flattening of nested partitions)}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{} The final result is sorted to provide a canonical representation.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{n+nf}{normalize}\PYG{p}{(}\PYG{n+nv}{QtyIn}\PYG{p}{,} \PYG{n+nv}{QtyOut}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{p}{(}   \PYG{n+nf}{apply\PYGZus{}normalization\PYGZus{}step}\PYG{p}{(}\PYG{n+nv}{QtyIn}\PYG{p}{,} \PYG{n+nv}{QtyTemp}\PYG{p}{)}
    \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}  \PYG{c+c1}{\PYGZpc{} If a rule was applied, continue normalizing}
        \PYG{n+nf}{normalize}\PYG{p}{(}\PYG{n+nv}{QtyTemp}\PYG{p}{,} \PYG{n+nv}{QtyOut}\PYG{p}{)}
    \PYG{p}{;}   \PYG{c+c1}{\PYGZpc{} No more rules apply, sort for canonical representation}
        \PYG{n+nf}{sort}\PYG{p}{(}\PYG{n+nv}{QtyIn}\PYG{p}{,} \PYG{n+nv}{QtyOut}\PYG{p}{)}
    \PYG{p}{).}

\PYG{c+c1}{\PYGZpc{}! apply\PYGZus{}normalization\PYGZus{}step(+QtyIn, \PYGZhy{}QtyOut) is semidet.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{} Attempts to apply one equivalence rule to the quantity.}
\PYG{c+c1}{\PYGZpc{} Uses once/1 to commit to the first successful rule application.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{} @param QtyIn Input quantity}
\PYG{c+c1}{\PYGZpc{} @param QtyOut Quantity after applying one rule}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{} Rules are tried in priority order:}
\PYG{c+c1}{\PYGZpc{} 1. Grouping (e.g., 3/3 \PYGZhy{}\PYGZgt{} 1) \PYGZhy{} reconstitution of wholes}
\PYG{c+c1}{\PYGZpc{} 2. Composition (e.g., 1/4 of 1/3 \PYGZhy{}\PYGZgt{} 1/12) \PYGZhy{} flattening nested fractions}
\PYG{c+c1}{\PYGZpc{}}
\PYG{n+nf}{apply\PYGZus{}normalization\PYGZus{}step}\PYG{p}{(}\PYG{n+nv}{QtyIn}\PYG{p}{,} \PYG{n+nv}{QtyOut}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{c+c1}{\PYGZpc{} 1. Try Grouping first (reconstitution has higher priority)}
    \PYG{n+nf}{once}\PYG{p}{(}\PYG{n+nf}{apply\PYGZus{}equivalence\PYGZus{}rule}\PYG{p}{(}\PYG{l+s+sAtom}{grouping}\PYG{p}{,} \PYG{n+nv}{QtyIn}\PYG{p}{,} \PYG{n+nv}{QtyOut}\PYG{p}{)).}
    
\PYG{n+nf}{apply\PYGZus{}normalization\PYGZus{}step}\PYG{p}{(}\PYG{n+nv}{QtyIn}\PYG{p}{,} \PYG{n+nv}{QtyOut}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{c+c1}{\PYGZpc{} 2. Try Composition (flattening nested structures)}
    \PYG{n+nf}{once}\PYG{p}{(}\PYG{n+nf}{apply\PYGZus{}equivalence\PYGZus{}rule}\PYG{p}{(}\PYG{l+s+sAtom}{composition}\PYG{p}{,} \PYG{n+nv}{QtyIn}\PYG{p}{,} \PYG{n+nv}{QtyOut}\PYG{p}{)).}
\end{MintedVerbatim}
