\begin{MintedVerbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/** \PYGZlt{}module\PYGZgt{} Full\PYGZhy{}featured API Server for Cognitive Modeling}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * This module provides a comprehensive HTTP server that exposes the full}
\PYG{c+cm}{ * capabilities of the cognitive modeling system. It integrates various}
\PYG{c+cm}{ * components, including the core execution handler for the ORR (Observe,}
\PYG{c+cm}{ * Reorganize, Reflect) cycle, logging, semantic analysis, and student}
\PYG{c+cm}{ * strategy analysis.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * This server is intended for development and provides a richer set of}
\PYG{c+cm}{ * endpoints compared to `working\PYGZus{}server.pl`.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * }
\PYG{c+cm}{ * }
\PYG{c+cm}{ */}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{n+nf}{library}\PYG{p}{(}\PYG{l+s+sAtom}{http}\PYG{o}{/}\PYG{l+s+sAtom}{thread\PYGZus{}httpd}\PYG{p}{)).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{n+nf}{library}\PYG{p}{(}\PYG{l+s+sAtom}{http}\PYG{o}{/}\PYG{l+s+sAtom}{http\PYGZus{}dispatch}\PYG{p}{)).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{n+nf}{library}\PYG{p}{(}\PYG{l+s+sAtom}{http}\PYG{o}{/}\PYG{l+s+sAtom}{http\PYGZus{}json}\PYG{p}{)).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{n+nf}{library}\PYG{p}{(}\PYG{l+s+sAtom}{http}\PYG{o}{/}\PYG{l+s+sAtom}{json\PYGZus{}convert}\PYG{p}{)).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{n+nf}{library}\PYG{p}{(}\PYG{l+s+sAtom}{http}\PYG{o}{/}\PYG{l+s+sAtom}{http\PYGZus{}cors}\PYG{p}{)).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{n+nf}{library}\PYG{p}{(}\PYG{l+s+sAtom}{http}\PYG{o}{/}\PYG{l+s+sAtom}{http\PYGZus{}header}\PYG{p}{)).}

\PYG{c+c1}{\PYGZpc{} Load the core application logic}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{l+s+sAtom}{execution\PYGZus{}handler}\PYG{p}{).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{l+s+sAtom}{reorganization\PYGZus{}log}\PYG{p}{).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{l+s+sAtom}{reflective\PYGZus{}monitor}\PYG{p}{).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{l+s+sAtom}{object\PYGZus{}level}\PYG{p}{).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{l+s+sAtom}{incompatibility\PYGZus{}semantics}\PYG{p}{).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{use\PYGZus{}module}\PYG{p}{(}\PYG{l+s+sAtom}{hermeneutic\PYGZus{}calculator}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} Define the REST API endpoints}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{http\PYGZus{}handler}\PYG{p}{(}\PYG{n+nf}{root}\PYG{p}{(}\PYG{l+s+sAtom}{solve}\PYG{p}{),} \PYG{l+s+sAtom}{solve\PYGZus{}handler}\PYG{p}{,} \PYG{p}{[}\PYG{n+nf}{method}\PYG{p}{(}\PYG{l+s+sAtom}{post}\PYG{p}{)]).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{http\PYGZus{}handler}\PYG{p}{(}\PYG{n+nf}{root}\PYG{p}{(}\PYG{l+s+sAtom}{log}\PYG{p}{),} \PYG{l+s+sAtom}{log\PYGZus{}handler}\PYG{p}{,} \PYG{p}{[}\PYG{n+nf}{method}\PYG{p}{(}\PYG{l+s+sAtom}{get}\PYG{p}{)]).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{http\PYGZus{}handler}\PYG{p}{(}\PYG{n+nf}{root}\PYG{p}{(}\PYG{l+s+sAtom}{knowledge}\PYG{p}{),} \PYG{l+s+sAtom}{knowledge\PYGZus{}handler}\PYG{p}{,} \PYG{p}{[}\PYG{n+nf}{method}\PYG{p}{(}\PYG{l+s+sAtom}{get}\PYG{p}{)]).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{http\PYGZus{}handler}\PYG{p}{(}\PYG{n+nf}{root}\PYG{p}{(}\PYG{l+s+sAtom}{analyze\PYGZus{}semantics}\PYG{p}{),} \PYG{l+s+sAtom}{analyze\PYGZus{}semantics\PYGZus{}handler}\PYG{p}{,} \PYG{p}{[}\PYG{n+nf}{method}\PYG{p}{(}\PYG{l+s+sAtom}{post}\PYG{p}{)]).}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{http\PYGZus{}handler}\PYG{p}{(}\PYG{n+nf}{root}\PYG{p}{(}\PYG{l+s+sAtom}{analyze\PYGZus{}strategy}\PYG{p}{),} \PYG{l+s+sAtom}{analyze\PYGZus{}strategy\PYGZus{}handler}\PYG{p}{,} \PYG{p}{[}\PYG{n+nf}{method}\PYG{p}{(}\PYG{l+s+sAtom}{post}\PYG{p}{)]).}

\PYG{c+c1}{\PYGZpc{} Enable CORS for all endpoints}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{set\PYGZus{}setting}\PYG{p}{(}\PYG{n+nn}{http}\PYG{p}{:}\PYG{l+s+sAtom}{cors}\PYG{p}{,} \PYG{p}{[}\PYG{l+s+sAtom}{*}\PYG{p}{]).}

\PYG{c+c1}{\PYGZpc{}!      server(+Port:integer) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Starts the HTTP server on the specified Port.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param Port The port number for the server to listen on.}
\PYG{n+nf}{server}\PYG{p}{(}\PYG{n+nv}{Port}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{http\PYGZus{}server}\PYG{p}{(}\PYG{l+s+sAtom}{http\PYGZus{}dispatch}\PYG{p}{,} \PYG{p}{[}\PYG{n+nf}{port}\PYG{p}{(}\PYG{n+nv}{Port}\PYG{p}{)]).}

\PYG{c+c1}{\PYGZpc{} \PYGZhy{}\PYGZhy{}\PYGZhy{} Endpoint Handlers \PYGZhy{}\PYGZhy{}\PYGZhy{}}

\PYG{c+c1}{\PYGZpc{}!      solve\PYGZus{}handler(+Request:list) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Handles POST requests to the `/solve` endpoint.}
\PYG{c+c1}{\PYGZpc{}       It expects a JSON object with a `goal` key, e.g., `\PYGZob{}\PYGZdq{}goal\PYGZdq{}: \PYGZdq{}add(s(0),s(0),X)\PYGZdq{}\PYGZcb{}`.}
\PYG{c+c1}{\PYGZpc{}       It runs the full ORR (Observe, Reorganize, Reflect) cycle for the given}
\PYG{c+c1}{\PYGZpc{}       goal and returns the final result.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param Request The incoming HTTP request.}
\PYG{n+nf}{solve\PYGZus{}handler}\PYG{p}{(}\PYG{n+nv}{Request}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{http\PYGZus{}read\PYGZus{}json\PYGZus{}dict}\PYG{p}{(}\PYG{n+nv}{Request}\PYG{p}{,} \PYG{n+nv}{In}\PYG{p}{),}
    \PYG{n+nf}{term\PYGZus{}string}\PYG{p}{(}\PYG{n+nv}{Goal}\PYG{p}{,} \PYG{n+nv}{In}\PYG{p}{.}\PYG{l+s+sAtom}{goal}\PYG{p}{),}
    \PYG{c+c1}{\PYGZpc{} Run the query, which performs the full ORR cycle}
    \PYG{n+nf}{run\PYGZus{}query}\PYG{p}{(}\PYG{n+nv}{Goal}\PYG{p}{),}
    \PYG{c+c1}{\PYGZpc{} After the cycle, find the result}
    \PYG{p}{(}   \PYG{n+nf}{clause}\PYG{p}{(}\PYG{l+s+sAtom}{object\PYGZus{}level:}\PYG{n+nv}{Goal}\PYG{p}{,} \PYG{l+s+sAtom}{true}\PYG{p}{)} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nv}{Result} \PYG{o}{=} \PYG{n+nv}{Goal}\PYG{p}{,}
        \PYG{n+nv}{Status} \PYG{o}{=} \PYG{l+s+sAtom}{\PYGZsq{}success\PYGZsq{}}
    \PYG{p}{;}   \PYG{n+nv}{Result} \PYG{o}{=} \PYG{l+s+sAtom}{\PYGZsq{}failed to find solution\PYGZsq{}}\PYG{p}{,}
        \PYG{n+nv}{Status} \PYG{o}{=} \PYG{l+s+sAtom}{\PYGZsq{}failure\PYGZsq{}}
    \PYG{p}{),}
    \PYG{n+nf}{term\PYGZus{}string}\PYG{p}{(}\PYG{n+nv}{ResultString}\PYG{p}{,} \PYG{n+nv}{Result}\PYG{p}{),}
    \PYG{n+nf}{reply\PYGZus{}json\PYGZus{}dict}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{p}{\PYGZob{}}\PYG{n+nn}{status}\PYG{p}{:} \PYG{n+nv}{Status}\PYG{p}{,} \PYG{n+nn}{result}\PYG{p}{:} \PYG{n+nv}{ResultString}\PYG{p}{\PYGZcb{}).}


\PYG{c+c1}{\PYGZpc{}!      log\PYGZus{}handler(+Request:list) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Handles GET requests to the `/log` endpoint.}
\PYG{c+c1}{\PYGZpc{}       It generates and returns the full reorganization log as a JSON object,}
\PYG{c+c1}{\PYGZpc{}       detailing the cognitive steps taken by the system.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param \PYGZus{}Request The incoming HTTP request (unused).}
\PYG{n+nf}{log\PYGZus{}handler}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{n+nv}{Request}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{generate\PYGZus{}report}\PYG{p}{(}\PYG{n+nv}{Report}\PYG{p}{),}
    \PYG{n+nf}{reply\PYGZus{}json\PYGZus{}dict}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{p}{\PYGZob{}}\PYG{n+nn}{report}\PYG{p}{:} \PYG{n+nv}{Report}\PYG{p}{\PYGZcb{}).}


\PYG{c+c1}{\PYGZpc{}!      knowledge\PYGZus{}handler(+Request:list) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Handles GET requests to the `/knowledge` endpoint.}
\PYG{c+c1}{\PYGZpc{}       It returns the current state of the system\PYGZsq{}s knowledge base, including}
\PYG{c+c1}{\PYGZpc{}       all clauses in the `object\PYGZus{}level` module and the current conceptual}
\PYG{c+c1}{\PYGZpc{}       stress map.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param \PYGZus{}Request The incoming HTTP request (unused).}
\PYG{n+nf}{knowledge\PYGZus{}handler}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{n+nv}{Request}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{findall}\PYG{p}{(}
        \PYG{n+nv}{Clause}\PYG{p}{,}
        \PYG{p}{(}\PYG{n+nf}{clause}\PYG{p}{(}\PYG{l+s+sAtom}{object\PYGZus{}level:}\PYG{n+nv}{Head}\PYG{p}{,} \PYG{n+nv}{Body}\PYG{p}{),} \PYG{n+nv}{Clause} \PYG{o}{=} \PYG{p}{(}\PYG{n+nv}{Head} \PYG{p}{:\PYGZhy{}} \PYG{n+nv}{Body}\PYG{p}{)),}
        \PYG{n+nv}{Clauses}
    \PYG{p}{),}
    \PYG{n+nf}{get\PYGZus{}stress\PYGZus{}map}\PYG{p}{(}\PYG{n+nv}{StressMap}\PYG{p}{),}
    \PYG{n+nf}{prolog\PYGZus{}to\PYGZus{}json}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{p}{\PYGZob{}}\PYG{n+nn}{clauses}\PYG{p}{:} \PYG{n+nv}{Clauses}\PYG{p}{,} \PYG{l+s+sAtom}{stress\PYGZus{}map:} \PYG{n+nv}{StressMap}\PYG{p}{\PYGZcb{},} \PYG{n+nv}{JSON\PYGZus{}Object}\PYG{p}{),}
    \PYG{n+nf}{reply\PYGZus{}json}\PYG{p}{(}\PYG{n+nv}{JSON\PYGZus{}Object}\PYG{p}{).}


\PYG{c+c1}{\PYGZpc{}!      analyze\PYGZus{}semantics\PYGZus{}handler(+Request:list) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Handles POST requests to the `/analyze\PYGZus{}semantics` endpoint.}
\PYG{c+c1}{\PYGZpc{}       It expects a JSON object with a `statement` key, e.g., `\PYGZob{}\PYGZdq{}statement\PYGZdq{}: \PYGZdq{}The object is red\PYGZdq{}\PYGZcb{}`.}
\PYG{c+c1}{\PYGZpc{}       It performs a semantic analysis of the statement based on incompatibility semantics.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param Request The incoming HTTP request.}
\PYG{n+nf}{analyze\PYGZus{}semantics\PYGZus{}handler}\PYG{p}{(}\PYG{n+nv}{Request}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{cors\PYGZus{}enable}\PYG{p}{(}\PYG{n+nv}{Request}\PYG{p}{,} \PYG{p}{[}\PYG{n+nf}{methods}\PYG{p}{([}\PYG{l+s+sAtom}{post}\PYG{p}{,} \PYG{l+s+sAtom}{options}\PYG{p}{])]),}
    \PYG{p}{(}   \PYG{n+nf}{http\PYGZus{}read\PYGZus{}json\PYGZus{}dict}\PYG{p}{(}\PYG{n+nv}{Request}\PYG{p}{,} \PYG{n+nv}{In}\PYG{p}{)} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nv}{Statement} \PYG{o}{=} \PYG{n+nv}{In}\PYG{p}{.}\PYG{l+s+sAtom}{statement}\PYG{p}{,}
        \PYG{n+nf}{analyze\PYGZus{}statement\PYGZus{}semantics}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{n+nv}{Analysis}\PYG{p}{),}
        \PYG{n+nf}{reply\PYGZus{}json\PYGZus{}dict}\PYG{p}{(}\PYG{n+nv}{Analysis}\PYG{p}{)}
    \PYG{p}{;}   \PYG{n+nf}{reply\PYGZus{}json\PYGZus{}dict}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{p}{\PYGZob{}}\PYG{n+nn}{error}\PYG{p}{:} \PYG{l+s+s2}{\PYGZdq{}Invalid JSON input\PYGZdq{}}\PYG{p}{\PYGZcb{})}
    \PYG{p}{).}


\PYG{c+c1}{\PYGZpc{}!      analyze\PYGZus{}strategy\PYGZus{}handler(+Request:list) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Handles POST requests to the `/analyze\PYGZus{}strategy` endpoint.}
\PYG{c+c1}{\PYGZpc{}       It expects a JSON object with `problemContext` and `strategy` keys,}
\PYG{c+c1}{\PYGZpc{}       e.g., `\PYGZob{}\PYGZdq{}problemContext\PYGZdq{}: \PYGZdq{}Math\PYGZhy{}JRU\PYGZdq{}, \PYGZdq{}strategy\PYGZdq{}: \PYGZdq{}student counted all\PYGZdq{}\PYGZcb{}`.}
\PYG{c+c1}{\PYGZpc{}       It returns a CGI/Piagetian analysis of the described student strategy.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param Request The incoming HTTP request.}
\PYG{n+nf}{analyze\PYGZus{}strategy\PYGZus{}handler}\PYG{p}{(}\PYG{n+nv}{Request}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{cors\PYGZus{}enable}\PYG{p}{(}\PYG{n+nv}{Request}\PYG{p}{,} \PYG{p}{[}\PYG{n+nf}{methods}\PYG{p}{([}\PYG{l+s+sAtom}{post}\PYG{p}{,} \PYG{l+s+sAtom}{options}\PYG{p}{])]),}
    \PYG{p}{(}   \PYG{n+nf}{http\PYGZus{}read\PYGZus{}json\PYGZus{}dict}\PYG{p}{(}\PYG{n+nv}{Request}\PYG{p}{,} \PYG{n+nv}{In}\PYG{p}{)} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nv}{ProblemContext} \PYG{o}{=} \PYG{n+nv}{In}\PYG{p}{.}\PYG{l+s+sAtom}{problemContext}\PYG{p}{,}
        \PYG{n+nv}{StrategyDescription} \PYG{o}{=} \PYG{n+nv}{In}\PYG{p}{.}\PYG{l+s+sAtom}{strategy}\PYG{p}{,}
        \PYG{n+nf}{analyze\PYGZus{}cgi\PYGZus{}strategy}\PYG{p}{(}\PYG{n+nv}{ProblemContext}\PYG{p}{,} \PYG{n+nv}{StrategyDescription}\PYG{p}{,} \PYG{n+nv}{Analysis}\PYG{p}{),}
        \PYG{n+nf}{reply\PYGZus{}json\PYGZus{}dict}\PYG{p}{(}\PYG{n+nv}{Analysis}\PYG{p}{)}
    \PYG{p}{;}   \PYG{n+nf}{reply\PYGZus{}json\PYGZus{}dict}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{p}{\PYGZob{}}\PYG{n+nn}{error}\PYG{p}{:} \PYG{l+s+s2}{\PYGZdq{}Invalid JSON input\PYGZdq{}}\PYG{p}{\PYGZcb{})}
    \PYG{p}{).}


\PYG{c+c1}{\PYGZpc{} \PYGZhy{}\PYGZhy{}\PYGZhy{} Helper for JSON conversion \PYGZhy{}\PYGZhy{}\PYGZhy{}}

\PYG{c+c1}{\PYGZpc{}!      json\PYGZus{}convert:prolog\PYGZus{}to\PYGZus{}json(+Term, \PYGZhy{}JSON) is multi.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       A multifile predicate that extends the default JSON conversion library.}
\PYG{c+c1}{\PYGZpc{}       This implementation is needed to handle the conversion of complex Prolog}
\PYG{c+c1}{\PYGZpc{}       terms (like rule bodies) into a structured JSON format.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param Term The Prolog term to convert.}
\PYG{c+c1}{\PYGZpc{}       @param JSON The resulting JSON object.}
\PYG{p}{:\PYGZhy{}} \PYG{l+s+sAtom}{multifile} \PYG{l+s+sAtom}{json\PYGZus{}convert:prolog\PYGZus{}to\PYGZus{}json}\PYG{o}{/}\PYG{l+m+mf}{2.}
\PYG{l+s+sAtom}{json\PYGZus{}convert:}\PYG{n+nf}{prolog\PYGZus{}to\PYGZus{}json}\PYG{p}{(}\PYG{n+nv}{Term}\PYG{p}{,} \PYG{n+nv}{JSON}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{is\PYGZus{}list}\PYG{p}{(}\PYG{n+nv}{Term}\PYG{p}{),} \PYG{p}{!,}
    \PYG{n+nf}{maplist}\PYG{p}{(}\PYG{l+s+sAtom}{json\PYGZus{}convert:prolog\PYGZus{}to\PYGZus{}json}\PYG{p}{,} \PYG{n+nv}{Term}\PYG{p}{,} \PYG{n+nv}{JSON}\PYG{p}{).}
\PYG{l+s+sAtom}{json\PYGZus{}convert:}\PYG{n+nf}{prolog\PYGZus{}to\PYGZus{}json}\PYG{p}{(}\PYG{n+nv}{Term}\PYG{p}{,} \PYG{n+nv}{JSON}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{compound}\PYG{p}{(}\PYG{n+nv}{Term}\PYG{p}{),}
    \PYG{n+nv}{Term} \PYG{l+s+sAtom}{=..} \PYG{p}{[}\PYG{n+nv}{Functor} \PYG{p}{|} \PYG{n+nv}{Args}\PYG{p}{],}
    \PYG{n+nf}{maplist}\PYG{p}{(}\PYG{l+s+sAtom}{json\PYGZus{}convert:prolog\PYGZus{}to\PYGZus{}json}\PYG{p}{,} \PYG{n+nv}{Args}\PYG{p}{,} \PYG{n+nv}{JSONArgs}\PYG{p}{),}
    \PYG{n+nv}{JSON} \PYG{o}{=} \PYG{k}{\PYGZus{}}\PYG{p}{\PYGZob{}}\PYG{n+nn}{functor}\PYG{p}{:} \PYG{n+nv}{Functor}\PYG{p}{,} \PYG{n+nn}{args}\PYG{p}{:} \PYG{n+nv}{JSONArgs}\PYG{p}{\PYGZcb{}.}
\PYG{l+s+sAtom}{json\PYGZus{}convert:}\PYG{n+nf}{prolog\PYGZus{}to\PYGZus{}json}\PYG{p}{(}\PYG{n+nv}{Term}\PYG{p}{,} \PYG{n+nv}{JSON}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{l+s+sAtom}{\PYGZbs{}+} \PYG{n+nf}{compound}\PYG{p}{(}\PYG{n+nv}{Term}\PYG{p}{),}
    \PYG{n+nf}{term\PYGZus{}string}\PYG{p}{(}\PYG{n+nv}{Term}\PYG{p}{,} \PYG{n+nv}{JSON}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} \PYGZhy{}\PYGZhy{}\PYGZhy{} Helper Predicates for Analysis \PYGZhy{}\PYGZhy{}\PYGZhy{}}

\PYG{c+c1}{\PYGZpc{}!      analyze\PYGZus{}statement\PYGZus{}semantics(+Statement:string, \PYGZhy{}Analysis:dict) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Performs semantic analysis on a given statement.}
\PYG{c+c1}{\PYGZpc{}       It finds all implications and incompatibilities for the normalized}
\PYG{c+c1}{\PYGZpc{}       (lowercase) statement.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param Statement The input string to analyze.}
\PYG{c+c1}{\PYGZpc{}       @param Analysis A dict containing the original statement, a list of}
\PYG{c+c1}{\PYGZpc{}       implications, and a list of incompatibilities.}
\PYG{n+nf}{analyze\PYGZus{}statement\PYGZus{}semantics}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{n+nv}{Analysis}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{atom\PYGZus{}string}\PYG{p}{(}\PYG{n+nv}{StatementAtom}\PYG{p}{,} \PYG{n+nv}{Statement}\PYG{p}{),}
    \PYG{n+nf}{downcase\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{StatementAtom}\PYG{p}{,} \PYG{n+nv}{Normalized}\PYG{p}{),}
    
    \PYG{c+c1}{\PYGZpc{} Basic semantic analysis based on statement content}
    \PYG{n+nf}{findall}\PYG{p}{(}\PYG{n+nv}{Implication}\PYG{p}{,} \PYG{n+nf}{get\PYGZus{}implications}\PYG{p}{(}\PYG{n+nv}{Normalized}\PYG{p}{,} \PYG{n+nv}{Implication}\PYG{p}{),} \PYG{n+nv}{Implies}\PYG{p}{),}
    \PYG{n+nf}{findall}\PYG{p}{(}\PYG{n+nv}{Incompatibility}\PYG{p}{,} \PYG{n+nf}{get\PYGZus{}incompatibilities}\PYG{p}{(}\PYG{n+nv}{Normalized}\PYG{p}{,} \PYG{n+nv}{Incompatibility}\PYG{p}{),} \PYG{n+nv}{IncompatibleWith}\PYG{p}{),}
    
    \PYG{n+nv}{Analysis} \PYG{o}{=} \PYG{k}{\PYGZus{}}\PYG{p}{\PYGZob{}}
        \PYG{n+nn}{statement}\PYG{p}{:} \PYG{n+nv}{Statement}\PYG{p}{,}
        \PYG{n+nn}{implies}\PYG{p}{:} \PYG{n+nv}{Implies}\PYG{p}{,}
        \PYG{l+s+sAtom}{incompatibleWith:} \PYG{n+nv}{IncompatibleWith}
    \PYG{p}{\PYGZcb{}.}

\PYG{c+c1}{\PYGZpc{}!      get\PYGZus{}implications(+Statement:atom, \PYGZhy{}Implication:string) is nondet.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Generates implications for a given statement.}
\PYG{c+c1}{\PYGZpc{}       This predicate defines the semantic entailments based on keywords}
\PYG{c+c1}{\PYGZpc{}       found in the statement. It is a multi\PYGZhy{}clause predicate where each}
\PYG{c+c1}{\PYGZpc{}       clause represents a different implication rule.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param Statement The normalized (lowercase) input atom.}
\PYG{c+c1}{\PYGZpc{}       @param Implication A string describing what the statement implies.}
\PYG{n+nf}{get\PYGZus{}implications}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}The object is colored\PYGZsq{}}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{sub\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{red}\PYG{p}{).}
\PYG{n+nf}{get\PYGZus{}implications}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}The shape is a rectangle\PYGZsq{}}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{sub\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{square}\PYG{p}{).}
\PYG{n+nf}{get\PYGZus{}implications}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}The shape is a polygon\PYGZsq{}}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{sub\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{square}\PYG{p}{).}
\PYG{n+nf}{get\PYGZus{}implications}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}The shape has 4 sides of equal length\PYGZsq{}}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{sub\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{square}\PYG{p}{).}
\PYG{n+nf}{get\PYGZus{}implications}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}This statement has semantic content\PYGZsq{}}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{Statement} \PYG{l+s+sAtom}{\PYGZbs{}=} \PYG{l+s+sAtom}{\PYGZsq{}\PYGZsq{}}\PYG{p}{.}

\PYG{c+c1}{\PYGZpc{}!      get\PYGZus{}incompatibilities(+Statement:atom, \PYGZhy{}Incompatibility:string) is nondet.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Generates incompatibilities for a given statement.}
\PYG{c+c1}{\PYGZpc{}       This predicate defines what a statement semantically rules out based}
\PYG{c+c1}{\PYGZpc{}       on keywords. It is a multi\PYGZhy{}clause predicate where each clause}
\PYG{c+c1}{\PYGZpc{}       represents a different incompatibility rule.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param Statement The normalized (lowercase) input atom.}
\PYG{c+c1}{\PYGZpc{}       @param Incompatibility A string describing what the statement is incompatible with.}
\PYG{n+nf}{get\PYGZus{}incompatibilities}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}The object is entirely blue\PYGZsq{}}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{sub\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{red}\PYG{p}{).}
\PYG{n+nf}{get\PYGZus{}incompatibilities}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}The object is monochromatic and green\PYGZsq{}}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{sub\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{red}\PYG{p}{).}
\PYG{n+nf}{get\PYGZus{}incompatibilities}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}The shape is a circle\PYGZsq{}}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{sub\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{square}\PYG{p}{).}
\PYG{n+nf}{get\PYGZus{}incompatibilities}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}The shape has exactly 3 sides\PYGZsq{}}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{sub\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{square}\PYG{p}{).}
\PYG{n+nf}{get\PYGZus{}incompatibilities}\PYG{p}{(}\PYG{n+nv}{Statement}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}The negation of this statement\PYGZsq{}}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nv}{Statement} \PYG{l+s+sAtom}{\PYGZbs{}=} \PYG{l+s+sAtom}{\PYGZsq{}\PYGZsq{}}\PYG{p}{.}

\PYG{c+c1}{\PYGZpc{}!      analyze\PYGZus{}cgi\PYGZus{}strategy(+ProblemContext:string, +StrategyDescription:string, \PYGZhy{}Analysis:dict) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Analyzes a student\PYGZsq{}s problem\PYGZhy{}solving strategy within a given context.}
\PYG{c+c1}{\PYGZpc{}       It normalizes the strategy description and uses `classify\PYGZus{}strategy/7`}
\PYG{c+c1}{\PYGZpc{}       to get a detailed analysis.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param ProblemContext The context of the problem (e.g., \PYGZdq{}Math\PYGZhy{}Addition\PYGZdq{}).}
\PYG{c+c1}{\PYGZpc{}       @param StrategyDescription A text description of the student\PYGZsq{}s strategy.}
\PYG{c+c1}{\PYGZpc{}       @param Analysis A dict containing the classification, developmental stage,}
\PYG{c+c1}{\PYGZpc{}       implications, incompatibilities, and pedagogical recommendations.}
\PYG{n+nf}{analyze\PYGZus{}cgi\PYGZus{}strategy}\PYG{p}{(}\PYG{n+nv}{ProblemContext}\PYG{p}{,} \PYG{n+nv}{StrategyDescription}\PYG{p}{,} \PYG{n+nv}{Analysis}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{atom\PYGZus{}string}\PYG{p}{(}\PYG{n+nv}{StrategyAtom}\PYG{p}{,} \PYG{n+nv}{StrategyDescription}\PYG{p}{),}
    \PYG{n+nf}{downcase\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{StrategyAtom}\PYG{p}{,} \PYG{n+nv}{Normalized}\PYG{p}{),}
    
    \PYG{n+nf}{classify\PYGZus{}strategy}\PYG{p}{(}\PYG{n+nv}{ProblemContext}\PYG{p}{,} \PYG{n+nv}{Normalized}\PYG{p}{,} \PYG{n+nv}{Classification}\PYG{p}{,} \PYG{n+nv}{Stage}\PYG{p}{,} \PYG{n+nv}{Implications}\PYG{p}{,} \PYG{n+nv}{Incompatibility}\PYG{p}{,} \PYG{n+nv}{Recommendations}\PYG{p}{),}
    
    \PYG{n+nv}{Analysis} \PYG{o}{=} \PYG{k}{\PYGZus{}}\PYG{p}{\PYGZob{}}
        \PYG{n+nn}{classification}\PYG{p}{:} \PYG{n+nv}{Classification}\PYG{p}{,}
        \PYG{n+nn}{stage}\PYG{p}{:} \PYG{n+nv}{Stage}\PYG{p}{,}
        \PYG{n+nn}{implications}\PYG{p}{:} \PYG{n+nv}{Implications}\PYG{p}{,}
        \PYG{n+nn}{incompatibility}\PYG{p}{:} \PYG{n+nv}{Incompatibility}\PYG{p}{,}
        \PYG{n+nn}{recommendations}\PYG{p}{:} \PYG{n+nv}{Recommendations}
    \PYG{p}{\PYGZcb{}.}

\PYG{c+c1}{\PYGZpc{}!      classify\PYGZus{}strategy(+Context:string, +Strategy:atom, \PYGZhy{}Classification:string, \PYGZhy{}Stage:string, \PYGZhy{}Implications:string, \PYGZhy{}Incompatibility:string, \PYGZhy{}Recommendations:string) is det.}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       Classifies a student\PYGZsq{}s strategy based on context and description.}
\PYG{c+c1}{\PYGZpc{}       This multi\PYGZhy{}clause predicate uses keyword matching on the strategy}
\PYG{c+c1}{\PYGZpc{}       description to determine the CGI classification, Piagetian stage,}
\PYG{c+c1}{\PYGZpc{}       and associated pedagogical insights for various domains (Math, Science).}
\PYG{c+c1}{\PYGZpc{}}
\PYG{c+c1}{\PYGZpc{}       @param Context The problem context (e.g., \PYGZdq{}Math\PYGZhy{}Addition\PYGZdq{}, \PYGZdq{}Science\PYGZhy{}Float\PYGZdq{}).}
\PYG{c+c1}{\PYGZpc{}       @param Strategy The normalized student strategy description.}
\PYG{c+c1}{\PYGZpc{}       @param Classification The CGI classification of the strategy.}
\PYG{c+c1}{\PYGZpc{}       @param Stage The associated Piagetian developmental stage.}
\PYG{c+c1}{\PYGZpc{}       @param Implications What the strategy implies about the student\PYGZsq{}s understanding.}
\PYG{c+c1}{\PYGZpc{}       @param Incompatibility The conceptual conflict this strategy might lead to.}
\PYG{c+c1}{\PYGZpc{}       @param Recommendations Pedagogical suggestions to advance the student\PYGZsq{}s understanding.}
\PYG{n+nf}{classify\PYGZus{}strategy}\PYG{p}{(}\PYG{n+nv}{Context}\PYG{p}{,} \PYG{n+nv}{Strategy}\PYG{p}{,} \PYG{n+nv}{Classification}\PYG{p}{,} \PYG{n+nv}{Stage}\PYG{p}{,} \PYG{n+nv}{Implications}\PYG{p}{,} \PYG{n+nv}{Incompatibility}\PYG{p}{,} \PYG{n+nv}{Recommendations}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{n+nf}{atom\PYGZus{}string}\PYG{p}{(}\PYG{n+nv}{Context}\PYG{p}{,} \PYG{n+nv}{ContextStr}\PYG{p}{),}
    \PYG{n+nf}{sub\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{ContextStr}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{4}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+s2}{\PYGZdq{}Math\PYGZdq{}}\PYG{p}{),}
    \PYG{p}{(}   \PYG{p}{(}\PYG{n+nf}{sub\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{Strategy}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}count all\PYGZsq{}}\PYG{p}{)} \PYG{p}{;} 
         \PYG{n+nf}{sub\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{Strategy}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}starting from one\PYGZsq{}}\PYG{p}{)} \PYG{p}{;} 
         \PYG{n+nf}{sub\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{Strategy}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}1, 2, 3\PYGZsq{}}\PYG{p}{))} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nv}{Classification} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Direct Modeling: Counting All\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Stage} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Preoperational (Piaget)\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Implications} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}The student needs to represent the quantities concretely and cannot treat the initial number as an abstract unit.\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Incompatibility} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}A commitment to \PYGZsq{}Counting All\PYGZsq{} is incompatible with the concept of \PYGZsq{}Cardinality\PYGZsq{} (understanding the first set can be counted abstractly).\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Recommendations} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Encourage \PYGZsq{}Counting On\PYGZsq{}. Ask: \PYGZsq{}You know there are 5 here. Can you start counting from 5 instead of 1?\PYGZsq{} This induces disequilibrium regarding their reliance on concrete modeling.\PYGZdq{}}
    \PYG{p}{;}   \PYG{p}{(}\PYG{n+nf}{sub\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{Strategy}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}count on\PYGZsq{}}\PYG{p}{)} \PYG{p}{;} 
         \PYG{n+nf}{sub\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{Strategy}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}started at 5\PYGZsq{}}\PYG{p}{))} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nv}{Classification} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Counting Strategy: Counting On\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Stage} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Concrete Operational (Early)\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Implications} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}The student understands the cardinality of the first number. This is a significant accommodation from Direct Modeling.\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Incompatibility} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Reliance on \PYGZsq{}Counting On\PYGZsq{} is incompatible with the immediate retrieval required for \PYGZsq{}Fluency/Known Facts\PYGZsq{}.\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Recommendations} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Work on derived facts. Ask: \PYGZsq{}If you know 5 + 5 = 10, how can that help you solve 5 + 6?\PYGZsq{}\PYGZdq{}}
    \PYG{p}{;}   \PYG{p}{(}\PYG{n+nf}{sub\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{Strategy}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}known fact\PYGZsq{}}\PYG{p}{)} \PYG{p}{;} 
         \PYG{n+nf}{sub\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{Strategy}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{\PYGZsq{}just knew\PYGZsq{}}\PYG{p}{))} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nv}{Classification} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Known Fact / Fluency\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Stage} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Concrete Operational\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Implications} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}The student has internalized the number relationship.\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Incompatibility} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Recommendations} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Introduce more complex problem structures (e.g., Join Change Unknown or multi\PYGZhy{}step problems) to generalize this understanding.\PYGZdq{}}
    \PYG{p}{;}   
        \PYG{n+nv}{Classification} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Unclassified\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Stage} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Unknown\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Implications} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Could not clearly identify the strategy based on the description. Please provide more detail about the student\PYGZsq{}s actions and reasoning.\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Incompatibility} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Recommendations} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}\PYGZdq{}}
    \PYG{p}{).}

\PYG{n+nf}{classify\PYGZus{}strategy}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}Science\PYGZhy{}Float\PYGZdq{}}\PYG{p}{,} \PYG{n+nv}{Strategy}\PYG{p}{,} \PYG{n+nv}{Classification}\PYG{p}{,} \PYG{n+nv}{Stage}\PYG{p}{,} \PYG{n+nv}{Implications}\PYG{p}{,} \PYG{n+nv}{Incompatibility}\PYG{p}{,} \PYG{n+nv}{Recommendations}\PYG{p}{)} \PYG{p}{:\PYGZhy{}}
    \PYG{p}{(}   \PYG{p}{(}\PYG{n+nf}{sub\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{Strategy}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{heavy}\PYG{p}{)} \PYG{p}{;} \PYG{n+nf}{sub\PYGZus{}atom}\PYG{p}{(}\PYG{n+nv}{Strategy}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+sAtom}{big}\PYG{p}{))} \PYG{l+s+sAtom}{\PYGZhy{}\PYGZgt{}}
        \PYG{n+nv}{Classification} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Perceptual Reasoning: Weight/Size as defining factor\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Stage} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Preoperational\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Implications} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}The student is focusing on salient perceptual features (size, weight) rather than the underlying principle (density).\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Incompatibility} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}The concept that \PYGZsq{}heavy things sink\PYGZsq{} is incompatible with observations of \PYGZsq{}large, heavy objects floating\PYGZsq{} (e.g., a boat).\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Recommendations} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Introduce an incompatible observation (disequilibrium). Show a very large object that floats (e.g., log) and a very small object that sinks (e.g., pebble). Ask them to revise their rule.\PYGZdq{}}
    \PYG{p}{;}   
        \PYG{n+nv}{Classification} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Unclassified\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Stage} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Unknown\PYGZdq{}}\PYG{p}{,} 
        \PYG{n+nv}{Implications} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}Could not clearly identify the strategy based on the description. Please provide more detail about the student\PYGZsq{}s actions and reasoning.\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Incompatibility} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}\PYGZdq{}}\PYG{p}{,}
        \PYG{n+nv}{Recommendations} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}\PYGZdq{}}
    \PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} Default case for unmatched contexts}
\PYG{n+nf}{classify\PYGZus{}strategy}\PYG{p}{(}\PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{k}{\PYGZus{}}\PYG{p}{,} \PYG{l+s+s2}{\PYGZdq{}Unclassified\PYGZdq{}}\PYG{p}{,} \PYG{l+s+s2}{\PYGZdq{}Unknown\PYGZdq{}}\PYG{p}{,} \PYG{l+s+s2}{\PYGZdq{}Could not clearly identify the strategy based on the description. Please provide more detail about the student\PYGZsq{}s actions and reasoning.\PYGZdq{}}\PYG{p}{,} \PYG{l+s+s2}{\PYGZdq{}\PYGZdq{}}\PYG{p}{,} \PYG{l+s+s2}{\PYGZdq{}\PYGZdq{}}\PYG{p}{).}

\PYG{c+c1}{\PYGZpc{} To run the server from the command line:}
\PYG{c+c1}{\PYGZpc{} swipl api\PYGZus{}server.pl \PYGZhy{}g \PYGZdq{}server(8000)\PYGZdq{}}
\PYG{p}{:\PYGZhy{}} \PYG{n+nf}{initialization}\PYG{p}{(}\PYG{n+nf}{server}\PYG{p}{(}\PYG{l+m+mi}{8000}\PYG{p}{),} \PYG{l+s+sAtom}{main}\PYG{p}{).}
\end{MintedVerbatim}
